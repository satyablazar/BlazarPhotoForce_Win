#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotoForce.App_Code
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhotoForce4")]
	public partial class PhotoSorterDBModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTemplate(Template instance);
    partial void UpdateTemplate(Template instance);
    partial void DeleteTemplate(Template instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertDefaultPackage(DefaultPackage instance);
    partial void UpdateDefaultPackage(DefaultPackage instance);
    partial void DeleteDefaultPackage(DefaultPackage instance);
    partial void InsertGroupClassPhoto(GroupClassPhoto instance);
    partial void UpdateGroupClassPhoto(GroupClassPhoto instance);
    partial void DeleteGroupClassPhoto(GroupClassPhoto instance);
    partial void InsertGroupItem(GroupItem instance);
    partial void UpdateGroupItem(GroupItem instance);
    partial void DeleteGroupItem(GroupItem instance);
    partial void InsertMaskDetail(MaskDetail instance);
    partial void UpdateMaskDetail(MaskDetail instance);
    partial void DeleteMaskDetail(MaskDetail instance);
    partial void InsertPackage(Package instance);
    partial void UpdatePackage(Package instance);
    partial void DeletePackage(Package instance);
    partial void InsertPhotographyJob(PhotographyJob instance);
    partial void UpdatePhotographyJob(PhotographyJob instance);
    partial void DeletePhotographyJob(PhotographyJob instance);
    partial void Inserttblmask(tblmask instance);
    partial void Updatetblmask(tblmask instance);
    partial void Deletetblmask(tblmask instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertRenameerrorlog(Renameerrorlog instance);
    partial void UpdateRenameerrorlog(Renameerrorlog instance);
    partial void DeleteRenameerrorlog(Renameerrorlog instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertActivityType(ActivityType instance);
    partial void UpdateActivityType(ActivityType instance);
    partial void DeleteActivityType(ActivityType instance);
    partial void InsertStudentImage(StudentImage instance);
    partial void UpdateStudentImage(StudentImage instance);
    partial void DeleteStudentImage(StudentImage instance);
    partial void InsertNextOrder(NextOrder instance);
    partial void UpdateNextOrder(NextOrder instance);
    partial void DeleteNextOrder(NextOrder instance);
    partial void InsertIQAccount(IQAccount instance);
    partial void UpdateIQAccount(IQAccount instance);
    partial void DeleteIQAccount(IQAccount instance);
    partial void InsertIQPriceSheet(IQPriceSheet instance);
    partial void UpdateIQPriceSheet(IQPriceSheet instance);
    partial void DeleteIQPriceSheet(IQPriceSheet instance);
    partial void InsertStudentImport(StudentImport instance);
    partial void UpdateStudentImport(StudentImport instance);
    partial void DeleteStudentImport(StudentImport instance);
    partial void InsertIQVandoSetting(IQVandoSetting instance);
    partial void UpdateIQVandoSetting(IQVandoSetting instance);
    partial void DeleteIQVandoSetting(IQVandoSetting instance);
    partial void InsertSimplePhotoPriceSheet(SimplePhotoPriceSheet instance);
    partial void UpdateSimplePhotoPriceSheet(SimplePhotoPriceSheet instance);
    partial void DeleteSimplePhotoPriceSheet(SimplePhotoPriceSheet instance);
    partial void InsertOrderPackage(OrderPackage instance);
    partial void UpdateOrderPackage(OrderPackage instance);
    partial void DeleteOrderPackage(OrderPackage instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertStudio(Studio instance);
    partial void UpdateStudio(Studio instance);
    partial void DeleteStudio(Studio instance);
    partial void InsertSimplePhotoExportBatch(SimplePhotoExportBatch instance);
    partial void UpdateSimplePhotoExportBatch(SimplePhotoExportBatch instance);
    partial void DeleteSimplePhotoExportBatch(SimplePhotoExportBatch instance);
    partial void InsertPhotoShoot(PhotoShoot instance);
    partial void UpdatePhotoShoot(PhotoShoot instance);
    partial void DeletePhotoShoot(PhotoShoot instance);
    partial void InsertPhotoshootTypeTable(PhotoshootTypeTable instance);
    partial void UpdatePhotoshootTypeTable(PhotoshootTypeTable instance);
    partial void DeletePhotoshootTypeTable(PhotoshootTypeTable instance);
    partial void InsertWorkflowCollection(WorkflowCollection instance);
    partial void UpdateWorkflowCollection(WorkflowCollection instance);
    partial void DeleteWorkflowCollection(WorkflowCollection instance);
    partial void InsertItemClassType(ItemClassType instance);
    partial void UpdateItemClassType(ItemClassType instance);
    partial void DeleteItemClassType(ItemClassType instance);
    partial void InsertPhotoshootWorkflowItem(PhotoshootWorkflowItem instance);
    partial void UpdatePhotoshootWorkflowItem(PhotoshootWorkflowItem instance);
    partial void DeletePhotoshootWorkflowItem(PhotoshootWorkflowItem instance);
    partial void InsertWorkflowItem(WorkflowItem instance);
    partial void UpdateWorkflowItem(WorkflowItem instance);
    partial void DeleteWorkflowItem(WorkflowItem instance);
    partial void InsertWorkflowCollectionItem(WorkflowCollectionItem instance);
    partial void UpdateWorkflowCollectionItem(WorkflowCollectionItem instance);
    partial void DeleteWorkflowCollectionItem(WorkflowCollectionItem instance);
    partial void InsertOrdersImport(OrdersImport instance);
    partial void UpdateOrdersImport(OrdersImport instance);
    partial void DeleteOrdersImport(OrdersImport instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertSchool(School instance);
    partial void UpdateSchool(School instance);
    partial void DeleteSchool(School instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertStudentPhotoOrder(StudentPhotoOrder instance);
    partial void UpdateStudentPhotoOrder(StudentPhotoOrder instance);
    partial void DeleteStudentPhotoOrder(StudentPhotoOrder instance);
    #endregion
		
		public PhotoSorterDBModelDataContext() : 
				base(global::PhotoForce.Properties.Settings.Default.PhotoForce4ConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoSorterDBModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoSorterDBModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoSorterDBModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoSorterDBModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Template> Templates
		{
			get
			{
				return this.GetTable<Template>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<DefaultPackage> DefaultPackages
		{
			get
			{
				return this.GetTable<DefaultPackage>();
			}
		}
		
		public System.Data.Linq.Table<GroupClassPhoto> GroupClassPhotos
		{
			get
			{
				return this.GetTable<GroupClassPhoto>();
			}
		}
		
		public System.Data.Linq.Table<GroupItem> GroupItems
		{
			get
			{
				return this.GetTable<GroupItem>();
			}
		}
		
		public System.Data.Linq.Table<MaskDetail> MaskDetails
		{
			get
			{
				return this.GetTable<MaskDetail>();
			}
		}
		
		public System.Data.Linq.Table<Package> Packages
		{
			get
			{
				return this.GetTable<Package>();
			}
		}
		
		public System.Data.Linq.Table<PhotographyJob> PhotographyJobs
		{
			get
			{
				return this.GetTable<PhotographyJob>();
			}
		}
		
		public System.Data.Linq.Table<tblmask> tblmasks
		{
			get
			{
				return this.GetTable<tblmask>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<Renameerrorlog> Renameerrorlogs
		{
			get
			{
				return this.GetTable<Renameerrorlog>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<ActivityType> ActivityTypes
		{
			get
			{
				return this.GetTable<ActivityType>();
			}
		}
		
		public System.Data.Linq.Table<StudentImage> StudentImages
		{
			get
			{
				return this.GetTable<StudentImage>();
			}
		}
		
		public System.Data.Linq.Table<NextOrder> NextOrders
		{
			get
			{
				return this.GetTable<NextOrder>();
			}
		}
		
		public System.Data.Linq.Table<View_Order> View_Orders
		{
			get
			{
				return this.GetTable<View_Order>();
			}
		}
		
		public System.Data.Linq.Table<IQAccount> IQAccounts
		{
			get
			{
				return this.GetTable<IQAccount>();
			}
		}
		
		public System.Data.Linq.Table<IQPriceSheet> IQPriceSheets
		{
			get
			{
				return this.GetTable<IQPriceSheet>();
			}
		}
		
		public System.Data.Linq.Table<StudentImport> StudentImports
		{
			get
			{
				return this.GetTable<StudentImport>();
			}
		}
		
		public System.Data.Linq.Table<IQVandoSetting> IQVandoSettings
		{
			get
			{
				return this.GetTable<IQVandoSetting>();
			}
		}
		
		public System.Data.Linq.Table<SimplePhotoPriceSheet> SimplePhotoPriceSheets
		{
			get
			{
				return this.GetTable<SimplePhotoPriceSheet>();
			}
		}
		
		public System.Data.Linq.Table<OrderPackage> OrderPackages
		{
			get
			{
				return this.GetTable<OrderPackage>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Studio> Studios
		{
			get
			{
				return this.GetTable<Studio>();
			}
		}
		
		public System.Data.Linq.Table<SimplePhotoExportBatch> SimplePhotoExportBatches
		{
			get
			{
				return this.GetTable<SimplePhotoExportBatch>();
			}
		}
		
		public System.Data.Linq.Table<PhotoShoot> PhotoShoots
		{
			get
			{
				return this.GetTable<PhotoShoot>();
			}
		}
		
		public System.Data.Linq.Table<PhotoshootTypeTable> PhotoshootTypeTables
		{
			get
			{
				return this.GetTable<PhotoshootTypeTable>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowCollection> WorkflowCollections
		{
			get
			{
				return this.GetTable<WorkflowCollection>();
			}
		}
		
		public System.Data.Linq.Table<ItemClassType> ItemClassTypes
		{
			get
			{
				return this.GetTable<ItemClassType>();
			}
		}
		
		public System.Data.Linq.Table<PhotoshootWorkflowItem> PhotoshootWorkflowItems
		{
			get
			{
				return this.GetTable<PhotoshootWorkflowItem>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowItem> WorkflowItems
		{
			get
			{
				return this.GetTable<WorkflowItem>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowCollectionItem> WorkflowCollectionItems
		{
			get
			{
				return this.GetTable<WorkflowCollectionItem>();
			}
		}
		
		public System.Data.Linq.Table<OrdersImport> OrdersImports
		{
			get
			{
				return this.GetTable<OrdersImport>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<School> Schools
		{
			get
			{
				return this.GetTable<School>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<StudentPhotoOrder> StudentPhotoOrders
		{
			get
			{
				return this.GetTable<StudentPhotoOrder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Templates")]
	public partial class Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _templateCode;
		
		private string _templatePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OntemplateCodeChanging(string value);
    partial void OntemplateCodeChanged();
    partial void OntemplatePathChanging(string value);
    partial void OntemplatePathChanged();
    #endregion
		
		public Template()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_templateCode", DbType="NVarChar(50)")]
		public string templateCode
		{
			get
			{
				return this._templateCode;
			}
			set
			{
				if ((this._templateCode != value))
				{
					this.OntemplateCodeChanging(value);
					this.SendPropertyChanging();
					this._templateCode = value;
					this.SendPropertyChanged("templateCode");
					this.OntemplateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_templatePath", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string templatePath
		{
			get
			{
				return this._templatePath;
			}
			set
			{
				if ((this._templatePath != value))
				{
					this.OntemplatePathChanging(value);
					this.SendPropertyChanging();
					this._templatePath = value;
					this.SendPropertyChanged("templatePath");
					this.OntemplatePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SchoolID;
		
		private string _GroupName;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _createdOn;
		
		private System.Nullable<bool> _hasClassPhoto;
		
		private EntitySet<GroupClassPhoto> _GroupClassPhotos;
		
		private EntitySet<GroupItem> _GroupItems;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OncreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedOnChanged();
    partial void OnhasClassPhotoChanging(System.Nullable<bool> value);
    partial void OnhasClassPhotoChanged();
    #endregion
		
		public Group()
		{
			this._GroupClassPhotos = new EntitySet<GroupClassPhoto>(new Action<GroupClassPhoto>(this.attach_GroupClassPhotos), new Action<GroupClassPhoto>(this.detach_GroupClassPhotos));
			this._GroupItems = new EntitySet<GroupItem>(new Action<GroupItem>(this.attach_GroupItems), new Action<GroupItem>(this.detach_GroupItems));
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasClassPhoto", DbType="Bit")]
		public System.Nullable<bool> hasClassPhoto
		{
			get
			{
				return this._hasClassPhoto;
			}
			set
			{
				if ((this._hasClassPhoto != value))
				{
					this.OnhasClassPhotoChanging(value);
					this.SendPropertyChanging();
					this._hasClassPhoto = value;
					this.SendPropertyChanged("hasClassPhoto");
					this.OnhasClassPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupClassPhoto", Storage="_GroupClassPhotos", ThisKey="ID", OtherKey="GroupId")]
		public EntitySet<GroupClassPhoto> GroupClassPhotos
		{
			get
			{
				return this._GroupClassPhotos;
			}
			set
			{
				this._GroupClassPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupItem", Storage="_GroupItems", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<GroupItem> GroupItems
		{
			get
			{
				return this._GroupItems;
			}
			set
			{
				this._GroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Group", Storage="_School", ThisKey="SchoolID", OtherKey="ID", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._SchoolID = value.ID;
					}
					else
					{
						this._SchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupClassPhotos(GroupClassPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupClassPhotos(GroupClassPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupItems(GroupItem entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupItems(GroupItem entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultPackages")]
	public partial class DefaultPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _item;
		
		private string _package;
		
		private System.Nullable<double> _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnitemChanging(string value);
    partial void OnitemChanged();
    partial void OnpackageChanging(string value);
    partial void OnpackageChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    #endregion
		
		public DefaultPackage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item", DbType="VarChar(30)")]
		public string item
		{
			get
			{
				return this._item;
			}
			set
			{
				if ((this._item != value))
				{
					this.OnitemChanging(value);
					this.SendPropertyChanging();
					this._item = value;
					this.SendPropertyChanged("item");
					this.OnitemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_package", DbType="VarChar(150)")]
		public string package
		{
			get
			{
				return this._package;
			}
			set
			{
				if ((this._package != value))
				{
					this.OnpackageChanging(value);
					this.SendPropertyChanging();
					this._package = value;
					this.SendPropertyChanged("package");
					this.OnpackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupClassPhoto")]
	public partial class GroupClassPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<int> _studentImageId;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<StudentImage> _StudentImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnstudentImageIdChanging(System.Nullable<int> value);
    partial void OnstudentImageIdChanged();
    #endregion
		
		public GroupClassPhoto()
		{
			this._Group = default(EntityRef<Group>);
			this._StudentImage = default(EntityRef<StudentImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentImageId", DbType="Int")]
		public System.Nullable<int> studentImageId
		{
			get
			{
				return this._studentImageId;
			}
			set
			{
				if ((this._studentImageId != value))
				{
					if (this._StudentImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentImageIdChanging(value);
					this.SendPropertyChanging();
					this._studentImageId = value;
					this.SendPropertyChanged("studentImageId");
					this.OnstudentImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupClassPhoto", Storage="_Group", ThisKey="GroupId", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupClassPhotos.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupClassPhotos.Add(this);
						this._GroupId = value.ID;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImage_GroupClassPhoto", Storage="_StudentImage", ThisKey="studentImageId", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StudentImage StudentImage
		{
			get
			{
				return this._StudentImage.Entity;
			}
			set
			{
				StudentImage previousValue = this._StudentImage.Entity;
				if (((previousValue != value) 
							|| (this._StudentImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentImage.Entity = null;
						previousValue.GroupClassPhotos.Remove(this);
					}
					this._StudentImage.Entity = value;
					if ((value != null))
					{
						value.GroupClassPhotos.Add(this);
						this._studentImageId = value.ID;
					}
					else
					{
						this._studentImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupItem")]
	public partial class GroupItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _StudentPhotoID;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<StudentImage> _StudentImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnStudentPhotoIDChanging(System.Nullable<int> value);
    partial void OnStudentPhotoIDChanged();
    #endregion
		
		public GroupItem()
		{
			this._Group = default(EntityRef<Group>);
			this._StudentImage = default(EntityRef<StudentImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhotoID", DbType="Int")]
		public System.Nullable<int> StudentPhotoID
		{
			get
			{
				return this._StudentPhotoID;
			}
			set
			{
				if ((this._StudentPhotoID != value))
				{
					if (this._StudentImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentPhotoIDChanging(value);
					this.SendPropertyChanging();
					this._StudentPhotoID = value;
					this.SendPropertyChanged("StudentPhotoID");
					this.OnStudentPhotoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupItem", Storage="_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupItems.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupItems.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImage_GroupItem", Storage="_StudentImage", ThisKey="StudentPhotoID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StudentImage StudentImage
		{
			get
			{
				return this._StudentImage.Entity;
			}
			set
			{
				StudentImage previousValue = this._StudentImage.Entity;
				if (((previousValue != value) 
							|| (this._StudentImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentImage.Entity = null;
						previousValue.GroupItems.Remove(this);
					}
					this._StudentImage.Entity = value;
					if ((value != null))
					{
						value.GroupItems.Add(this);
						this._StudentPhotoID = value.ID;
					}
					else
					{
						this._StudentPhotoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaskDetails")]
	public partial class MaskDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaskDetID;
		
		private System.Nullable<int> _MaskID;
		
		private string _MaskDetail1;
		
		private string _Type;
		
		private string _SortOrder;
		
		private EntityRef<tblmask> _tblmask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaskDetIDChanging(int value);
    partial void OnMaskDetIDChanged();
    partial void OnMaskIDChanging(System.Nullable<int> value);
    partial void OnMaskIDChanged();
    partial void OnMaskDetail1Changing(string value);
    partial void OnMaskDetail1Changed();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnSortOrderChanging(string value);
    partial void OnSortOrderChanged();
    #endregion
		
		public MaskDetail()
		{
			this._tblmask = default(EntityRef<tblmask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskDetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaskDetID
		{
			get
			{
				return this._MaskDetID;
			}
			set
			{
				if ((this._MaskDetID != value))
				{
					this.OnMaskDetIDChanging(value);
					this.SendPropertyChanging();
					this._MaskDetID = value;
					this.SendPropertyChanged("MaskDetID");
					this.OnMaskDetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskID", DbType="Int")]
		public System.Nullable<int> MaskID
		{
			get
			{
				return this._MaskID;
			}
			set
			{
				if ((this._MaskID != value))
				{
					if (this._tblmask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaskIDChanging(value);
					this.SendPropertyChanging();
					this._MaskID = value;
					this.SendPropertyChanged("MaskID");
					this.OnMaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MaskDetail", Storage="_MaskDetail1", DbType="NVarChar(100)")]
		public string MaskDetail1
		{
			get
			{
				return this._MaskDetail1;
			}
			set
			{
				if ((this._MaskDetail1 != value))
				{
					this.OnMaskDetail1Changing(value);
					this.SendPropertyChanging();
					this._MaskDetail1 = value;
					this.SendPropertyChanged("MaskDetail1");
					this.OnMaskDetail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="NVarChar(50)")]
		public string SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblmask_MaskDetail", Storage="_tblmask", ThisKey="MaskID", OtherKey="MaskID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblmask tblmask
		{
			get
			{
				return this._tblmask.Entity;
			}
			set
			{
				tblmask previousValue = this._tblmask.Entity;
				if (((previousValue != value) 
							|| (this._tblmask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblmask.Entity = null;
						previousValue.MaskDetails.Remove(this);
					}
					this._tblmask.Entity = value;
					if ((value != null))
					{
						value.MaskDetails.Add(this);
						this._MaskID = value.MaskID;
					}
					else
					{
						this._MaskID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblmask");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Package")]
	public partial class Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _schoolId;
		
		private string _item;
		
		private string _package1;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<bool> _defaultval;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnschoolIdChanging(System.Nullable<int> value);
    partial void OnschoolIdChanged();
    partial void OnitemChanging(string value);
    partial void OnitemChanged();
    partial void Onpackage1Changing(string value);
    partial void Onpackage1Changed();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OndefaultvalChanging(System.Nullable<bool> value);
    partial void OndefaultvalChanged();
    #endregion
		
		public Package()
		{
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolId", DbType="Int")]
		public System.Nullable<int> schoolId
		{
			get
			{
				return this._schoolId;
			}
			set
			{
				if ((this._schoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolIdChanging(value);
					this.SendPropertyChanging();
					this._schoolId = value;
					this.SendPropertyChanged("schoolId");
					this.OnschoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item", DbType="VarChar(30)")]
		public string item
		{
			get
			{
				return this._item;
			}
			set
			{
				if ((this._item != value))
				{
					this.OnitemChanging(value);
					this.SendPropertyChanging();
					this._item = value;
					this.SendPropertyChanged("item");
					this.OnitemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="package", Storage="_package1", DbType="VarChar(150)")]
		public string package1
		{
			get
			{
				return this._package1;
			}
			set
			{
				if ((this._package1 != value))
				{
					this.Onpackage1Changing(value);
					this.SendPropertyChanging();
					this._package1 = value;
					this.SendPropertyChanged("package1");
					this.Onpackage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultval", DbType="Bit")]
		public System.Nullable<bool> defaultval
		{
			get
			{
				return this._defaultval;
			}
			set
			{
				if ((this._defaultval != value))
				{
					this.OndefaultvalChanging(value);
					this.SendPropertyChanging();
					this._defaultval = value;
					this.SendPropertyChanged("defaultval");
					this.OndefaultvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Package", Storage="_School", ThisKey="schoolId", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.Packages.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.Packages.Add(this);
						this._schoolId = value.ID;
					}
					else
					{
						this._schoolId = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhotographyJob")]
	public partial class PhotographyJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SchoolID;
		
		private string _JobName;
		
		private System.Nullable<System.DateTime> _JobDate;
		
		private string _ImageFolder;
		
		private string _UploadedDatafile;
		
		private string _StartYear;
		
		private string _EndYear;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<PhotoShoot> _PhotoShoots;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnJobNameChanging(string value);
    partial void OnJobNameChanged();
    partial void OnJobDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJobDateChanged();
    partial void OnImageFolderChanging(string value);
    partial void OnImageFolderChanged();
    partial void OnUploadedDatafileChanging(string value);
    partial void OnUploadedDatafileChanged();
    partial void OnStartYearChanging(string value);
    partial void OnStartYearChanged();
    partial void OnEndYearChanging(string value);
    partial void OnEndYearChanged();
    #endregion
		
		public PhotographyJob()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._PhotoShoots = new EntitySet<PhotoShoot>(new Action<PhotoShoot>(this.attach_PhotoShoots), new Action<PhotoShoot>(this.detach_PhotoShoots));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobName", DbType="VarChar(100)")]
		public string JobName
		{
			get
			{
				return this._JobName;
			}
			set
			{
				if ((this._JobName != value))
				{
					this.OnJobNameChanging(value);
					this.SendPropertyChanging();
					this._JobName = value;
					this.SendPropertyChanged("JobName");
					this.OnJobNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JobDate
		{
			get
			{
				return this._JobDate;
			}
			set
			{
				if ((this._JobDate != value))
				{
					this.OnJobDateChanging(value);
					this.SendPropertyChanging();
					this._JobDate = value;
					this.SendPropertyChanged("JobDate");
					this.OnJobDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFolder", DbType="VarChar(300)")]
		public string ImageFolder
		{
			get
			{
				return this._ImageFolder;
			}
			set
			{
				if ((this._ImageFolder != value))
				{
					this.OnImageFolderChanging(value);
					this.SendPropertyChanging();
					this._ImageFolder = value;
					this.SendPropertyChanged("ImageFolder");
					this.OnImageFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedDatafile", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string UploadedDatafile
		{
			get
			{
				return this._UploadedDatafile;
			}
			set
			{
				if ((this._UploadedDatafile != value))
				{
					this.OnUploadedDatafileChanging(value);
					this.SendPropertyChanging();
					this._UploadedDatafile = value;
					this.SendPropertyChanged("UploadedDatafile");
					this.OnUploadedDatafileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartYear", DbType="VarChar(10)")]
		public string StartYear
		{
			get
			{
				return this._StartYear;
			}
			set
			{
				if ((this._StartYear != value))
				{
					this.OnStartYearChanging(value);
					this.SendPropertyChanging();
					this._StartYear = value;
					this.SendPropertyChanged("StartYear");
					this.OnStartYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndYear", DbType="VarChar(10)")]
		public string EndYear
		{
			get
			{
				return this._EndYear;
			}
			set
			{
				if ((this._EndYear != value))
				{
					this.OnEndYearChanging(value);
					this.SendPropertyChanging();
					this._EndYear = value;
					this.SendPropertyChanged("EndYear");
					this.OnEndYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotographyJob_Activity", Storage="_Activities", ThisKey="ID", OtherKey="PhotographyJobId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotographyJob_PhotoShoot", Storage="_PhotoShoots", ThisKey="ID", OtherKey="PhotographyjobID")]
		public EntitySet<PhotoShoot> PhotoShoots
		{
			get
			{
				return this._PhotoShoots;
			}
			set
			{
				this._PhotoShoots.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotographyJob_Student", Storage="_Students", ThisKey="ID", OtherKey="PhotographyJobID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PhotographyJob", Storage="_School", ThisKey="SchoolID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.PhotographyJobs.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.PhotographyJobs.Add(this);
						this._SchoolID = value.ID;
					}
					else
					{
						this._SchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.PhotographyJob = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.PhotographyJob = null;
		}
		
		private void attach_PhotoShoots(PhotoShoot entity)
		{
			this.SendPropertyChanging();
			entity.PhotographyJob = this;
		}
		
		private void detach_PhotoShoots(PhotoShoot entity)
		{
			this.SendPropertyChanging();
			entity.PhotographyJob = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.PhotographyJob = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.PhotographyJob = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblmask")]
	public partial class tblmask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaskID;
		
		private string _MaskName;
		
		private System.Nullable<int> _schoolid;
		
		private EntitySet<MaskDetail> _MaskDetails;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaskIDChanging(int value);
    partial void OnMaskIDChanged();
    partial void OnMaskNameChanging(string value);
    partial void OnMaskNameChanged();
    partial void OnschoolidChanging(System.Nullable<int> value);
    partial void OnschoolidChanged();
    #endregion
		
		public tblmask()
		{
			this._MaskDetails = new EntitySet<MaskDetail>(new Action<MaskDetail>(this.attach_MaskDetails), new Action<MaskDetail>(this.detach_MaskDetails));
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaskID
		{
			get
			{
				return this._MaskID;
			}
			set
			{
				if ((this._MaskID != value))
				{
					this.OnMaskIDChanging(value);
					this.SendPropertyChanging();
					this._MaskID = value;
					this.SendPropertyChanged("MaskID");
					this.OnMaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskName", DbType="NVarChar(100)")]
		public string MaskName
		{
			get
			{
				return this._MaskName;
			}
			set
			{
				if ((this._MaskName != value))
				{
					this.OnMaskNameChanging(value);
					this.SendPropertyChanging();
					this._MaskName = value;
					this.SendPropertyChanged("MaskName");
					this.OnMaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolid", DbType="Int")]
		public System.Nullable<int> schoolid
		{
			get
			{
				return this._schoolid;
			}
			set
			{
				if ((this._schoolid != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolidChanging(value);
					this.SendPropertyChanging();
					this._schoolid = value;
					this.SendPropertyChanged("schoolid");
					this.OnschoolidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblmask_MaskDetail", Storage="_MaskDetails", ThisKey="MaskID", OtherKey="MaskID")]
		public EntitySet<MaskDetail> MaskDetails
		{
			get
			{
				return this._MaskDetails;
			}
			set
			{
				this._MaskDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_tblmask", Storage="_School", ThisKey="schoolid", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.tblmasks.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.tblmasks.Add(this);
						this._schoolid = value.ID;
					}
					else
					{
						this._schoolid = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaskDetails(MaskDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblmask = this;
		}
		
		private void detach_MaskDetails(MaskDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblmask = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _settingName;
		
		private string _settingValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsettingNameChanging(string value);
    partial void OnsettingNameChanged();
    partial void OnsettingValueChanging(string value);
    partial void OnsettingValueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settingName", DbType="NVarChar(100)")]
		public string settingName
		{
			get
			{
				return this._settingName;
			}
			set
			{
				if ((this._settingName != value))
				{
					this.OnsettingNameChanging(value);
					this.SendPropertyChanging();
					this._settingName = value;
					this.SendPropertyChanged("settingName");
					this.OnsettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settingValue", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string settingValue
		{
			get
			{
				return this._settingValue;
			}
			set
			{
				if ((this._settingValue != value))
				{
					this.OnsettingValueChanging(value);
					this.SendPropertyChanging();
					this._settingValue = value;
					this.SendPropertyChanged("settingValue");
					this.OnsettingValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Renameerrorlog")]
	public partial class Renameerrorlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _message;
		
		private string _imagename;
		
		private string _imagepath;
		
		private System.Nullable<System.DateTime> _currentdatetime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OnimagenameChanging(string value);
    partial void OnimagenameChanged();
    partial void OnimagepathChanging(string value);
    partial void OnimagepathChanged();
    partial void OncurrentdatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OncurrentdatetimeChanged();
    #endregion
		
		public Renameerrorlog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(1000)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagename", DbType="NVarChar(100)")]
		public string imagename
		{
			get
			{
				return this._imagename;
			}
			set
			{
				if ((this._imagename != value))
				{
					this.OnimagenameChanging(value);
					this.SendPropertyChanging();
					this._imagename = value;
					this.SendPropertyChanged("imagename");
					this.OnimagenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagepath", DbType="NVarChar(500)")]
		public string imagepath
		{
			get
			{
				return this._imagepath;
			}
			set
			{
				if ((this._imagepath != value))
				{
					this.OnimagepathChanging(value);
					this.SendPropertyChanging();
					this._imagepath = value;
					this.SendPropertyChanged("imagepath");
					this.OnimagepathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentdatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> currentdatetime
		{
			get
			{
				return this._currentdatetime;
			}
			set
			{
				if ((this._currentdatetime != value))
				{
					this.OncurrentdatetimeChanging(value);
					this.SendPropertyChanging();
					this._currentdatetime = value;
					this.SendPropertyChanged("currentdatetime");
					this.OncurrentdatetimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activities")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _ShortDescription;
		
		private string _Notes;
		
		private string _Status;
		
		private System.Nullable<int> _StudentId;
		
		private System.Nullable<int> _PhotoShootId;
		
		private int _SchoolId;
		
		private int _PhotographyJobId;
		
		private System.Nullable<System.DateTime> _ActivityDate;
		
		private int _Type;
		
		private int _UserName;
		
		private EntityRef<PhotographyJob> _PhotographyJob;
		
		private EntityRef<ActivityType> _ActivityType;
		
		private EntityRef<User> _User;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStudentIdChanging(System.Nullable<int> value);
    partial void OnStudentIdChanged();
    partial void OnPhotoShootIdChanging(System.Nullable<int> value);
    partial void OnPhotoShootIdChanged();
    partial void OnSchoolIdChanging(int value);
    partial void OnSchoolIdChanged();
    partial void OnPhotographyJobIdChanging(int value);
    partial void OnPhotographyJobIdChanged();
    partial void OnActivityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivityDateChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnUserNameChanging(int value);
    partial void OnUserNameChanged();
    #endregion
		
		public Activity()
		{
			this._PhotographyJob = default(EntityRef<PhotographyJob>);
			this._ActivityType = default(EntityRef<ActivityType>);
			this._User = default(EntityRef<User>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(50)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int")]
		public System.Nullable<int> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoShootId", DbType="Int")]
		public System.Nullable<int> PhotoShootId
		{
			get
			{
				return this._PhotoShootId;
			}
			set
			{
				if ((this._PhotoShootId != value))
				{
					this.OnPhotoShootIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoShootId = value;
					this.SendPropertyChanged("PhotoShootId");
					this.OnPhotoShootIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="Int NOT NULL")]
		public int SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotographyJobId", DbType="Int NOT NULL")]
		public int PhotographyJobId
		{
			get
			{
				return this._PhotographyJobId;
			}
			set
			{
				if ((this._PhotographyJobId != value))
				{
					if (this._PhotographyJob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotographyJobIdChanging(value);
					this.SendPropertyChanging();
					this._PhotographyJobId = value;
					this.SendPropertyChanged("PhotographyJobId");
					this.OnPhotographyJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivityDate
		{
			get
			{
				return this._ActivityDate;
			}
			set
			{
				if ((this._ActivityDate != value))
				{
					this.OnActivityDateChanging(value);
					this.SendPropertyChanging();
					this._ActivityDate = value;
					this.SendPropertyChanged("ActivityDate");
					this.OnActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._ActivityType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="Int NOT NULL")]
		public int UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotographyJob_Activity", Storage="_PhotographyJob", ThisKey="PhotographyJobId", OtherKey="ID", IsForeignKey=true)]
		public PhotographyJob PhotographyJob
		{
			get
			{
				return this._PhotographyJob.Entity;
			}
			set
			{
				PhotographyJob previousValue = this._PhotographyJob.Entity;
				if (((previousValue != value) 
							|| (this._PhotographyJob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotographyJob.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._PhotographyJob.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._PhotographyJobId = value.ID;
					}
					else
					{
						this._PhotographyJobId = default(int);
					}
					this.SendPropertyChanged("PhotographyJob");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_Activity", Storage="_ActivityType", ThisKey="Type", OtherKey="Id", IsForeignKey=true)]
		public ActivityType ActivityType
		{
			get
			{
				return this._ActivityType.Entity;
			}
			set
			{
				ActivityType previousValue = this._ActivityType.Entity;
				if (((previousValue != value) 
							|| (this._ActivityType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityType.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._ActivityType.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._Type = value.Id;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("ActivityType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Activity", Storage="_User", ThisKey="UserName", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._UserName = value.Id;
					}
					else
					{
						this._UserName = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Activity", Storage="_School", ThisKey="SchoolId", OtherKey="ID", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._SchoolId = value.ID;
					}
					else
					{
						this._SchoolId = default(int);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityType")]
	public partial class ActivityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public ActivityType()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_Activity", Storage="_Activities", ThisKey="Id", OtherKey="Type")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentImage")]
	public partial class StudentImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _PhotoShootID;
		
		private string _ImageName;
		
		private string _QuixieID;
		
		private string _FirstName;
		
		private string _Lastname;
		
		private string _StudentID;
		
		private string _Teacher;
		
		private string _Grade;
		
		private string _HomeRoom;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _Custom1;
		
		private string _Custom2;
		
		private string _Custom3;
		
		private string _Custom4;
		
		private string _Custom5;
		
		private string _Custom6;
		
		private string _Custom7;
		
		private string _Custom8;
		
		private string _Packages;
		
		private System.Nullable<bool> _yearbook;
		
		private System.Nullable<bool> _Multipose;
		
		private string _Ticketcode;
		
		private string _Emailaddress;
		
		private string _Password;
		
		private string _Rating;
		
		private string _RecordStatus;
		
		private System.Nullable<int> _StudentIDPK;
		
		private string _ImageNumber;
		
		private System.Nullable<bool> _Admincd;
		
		private string _OriginalImageName;
		
		private System.Nullable<bool> _failedRename;
		
		private EntitySet<GroupClassPhoto> _GroupClassPhotos;
		
		private EntitySet<GroupItem> _GroupItems;
		
		private EntitySet<StudentPhotoOrder> _StudentPhotoOrders;
		
		private EntityRef<PhotoShoot> _PhotoShoot;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnPhotoShootIDChanging(System.Nullable<int> value);
    partial void OnPhotoShootIDChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnQuixieIDChanging(string value);
    partial void OnQuixieIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnTeacherChanging(string value);
    partial void OnTeacherChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnHomeRoomChanging(string value);
    partial void OnHomeRoomChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCustom1Changing(string value);
    partial void OnCustom1Changed();
    partial void OnCustom2Changing(string value);
    partial void OnCustom2Changed();
    partial void OnCustom3Changing(string value);
    partial void OnCustom3Changed();
    partial void OnCustom4Changing(string value);
    partial void OnCustom4Changed();
    partial void OnCustom5Changing(string value);
    partial void OnCustom5Changed();
    partial void OnCustom6Changing(string value);
    partial void OnCustom6Changed();
    partial void OnCustom7Changing(string value);
    partial void OnCustom7Changed();
    partial void OnCustom8Changing(string value);
    partial void OnCustom8Changed();
    partial void OnPackagesChanging(string value);
    partial void OnPackagesChanged();
    partial void OnyearbookChanging(System.Nullable<bool> value);
    partial void OnyearbookChanged();
    partial void OnMultiposeChanging(System.Nullable<bool> value);
    partial void OnMultiposeChanged();
    partial void OnTicketcodeChanging(string value);
    partial void OnTicketcodeChanged();
    partial void OnEmailaddressChanging(string value);
    partial void OnEmailaddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRatingChanging(string value);
    partial void OnRatingChanged();
    partial void OnRecordStatusChanging(string value);
    partial void OnRecordStatusChanged();
    partial void OnStudentIDPKChanging(System.Nullable<int> value);
    partial void OnStudentIDPKChanged();
    partial void OnImageNumberChanging(string value);
    partial void OnImageNumberChanged();
    partial void OnAdmincdChanging(System.Nullable<bool> value);
    partial void OnAdmincdChanged();
    partial void OnOriginalImageNameChanging(string value);
    partial void OnOriginalImageNameChanged();
    partial void OnfailedRenameChanging(System.Nullable<bool> value);
    partial void OnfailedRenameChanged();
    #endregion
		
		public StudentImage()
		{
			this._GroupClassPhotos = new EntitySet<GroupClassPhoto>(new Action<GroupClassPhoto>(this.attach_GroupClassPhotos), new Action<GroupClassPhoto>(this.detach_GroupClassPhotos));
			this._GroupItems = new EntitySet<GroupItem>(new Action<GroupItem>(this.attach_GroupItems), new Action<GroupItem>(this.detach_GroupItems));
			this._StudentPhotoOrders = new EntitySet<StudentPhotoOrder>(new Action<StudentPhotoOrder>(this.attach_StudentPhotoOrders), new Action<StudentPhotoOrder>(this.detach_StudentPhotoOrders));
			this._PhotoShoot = default(EntityRef<PhotoShoot>);
			this._Student = default(EntityRef<Student>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoShootID", DbType="Int")]
		public System.Nullable<int> PhotoShootID
		{
			get
			{
				return this._PhotoShootID;
			}
			set
			{
				if ((this._PhotoShootID != value))
				{
					if (this._PhotoShoot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoShootIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoShootID = value;
					this.SendPropertyChanged("PhotoShootID");
					this.OnPhotoShootIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(150)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuixieID", DbType="VarChar(30)")]
		public string QuixieID
		{
			get
			{
				return this._QuixieID;
			}
			set
			{
				if ((this._QuixieID != value))
				{
					this.OnQuixieIDChanging(value);
					this.SendPropertyChanging();
					this._QuixieID = value;
					this.SendPropertyChanged("QuixieID");
					this.OnQuixieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher", DbType="VarChar(50)")]
		public string Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				if ((this._Teacher != value))
				{
					this.OnTeacherChanging(value);
					this.SendPropertyChanging();
					this._Teacher = value;
					this.SendPropertyChanged("Teacher");
					this.OnTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeRoom", DbType="VarChar(50)")]
		public string HomeRoom
		{
			get
			{
				return this._HomeRoom;
			}
			set
			{
				if ((this._HomeRoom != value))
				{
					this.OnHomeRoomChanging(value);
					this.SendPropertyChanging();
					this._HomeRoom = value;
					this.SendPropertyChanged("HomeRoom");
					this.OnHomeRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom1", DbType="VarChar(50)")]
		public string Custom1
		{
			get
			{
				return this._Custom1;
			}
			set
			{
				if ((this._Custom1 != value))
				{
					this.OnCustom1Changing(value);
					this.SendPropertyChanging();
					this._Custom1 = value;
					this.SendPropertyChanged("Custom1");
					this.OnCustom1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom2", DbType="VarChar(50)")]
		public string Custom2
		{
			get
			{
				return this._Custom2;
			}
			set
			{
				if ((this._Custom2 != value))
				{
					this.OnCustom2Changing(value);
					this.SendPropertyChanging();
					this._Custom2 = value;
					this.SendPropertyChanged("Custom2");
					this.OnCustom2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom3", DbType="VarChar(50)")]
		public string Custom3
		{
			get
			{
				return this._Custom3;
			}
			set
			{
				if ((this._Custom3 != value))
				{
					this.OnCustom3Changing(value);
					this.SendPropertyChanging();
					this._Custom3 = value;
					this.SendPropertyChanged("Custom3");
					this.OnCustom3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom4", DbType="VarChar(50)")]
		public string Custom4
		{
			get
			{
				return this._Custom4;
			}
			set
			{
				if ((this._Custom4 != value))
				{
					this.OnCustom4Changing(value);
					this.SendPropertyChanging();
					this._Custom4 = value;
					this.SendPropertyChanged("Custom4");
					this.OnCustom4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom5", DbType="VarChar(50)")]
		public string Custom5
		{
			get
			{
				return this._Custom5;
			}
			set
			{
				if ((this._Custom5 != value))
				{
					this.OnCustom5Changing(value);
					this.SendPropertyChanging();
					this._Custom5 = value;
					this.SendPropertyChanged("Custom5");
					this.OnCustom5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom6", DbType="VarChar(50)")]
		public string Custom6
		{
			get
			{
				return this._Custom6;
			}
			set
			{
				if ((this._Custom6 != value))
				{
					this.OnCustom6Changing(value);
					this.SendPropertyChanging();
					this._Custom6 = value;
					this.SendPropertyChanged("Custom6");
					this.OnCustom6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom7", DbType="VarChar(50)")]
		public string Custom7
		{
			get
			{
				return this._Custom7;
			}
			set
			{
				if ((this._Custom7 != value))
				{
					this.OnCustom7Changing(value);
					this.SendPropertyChanging();
					this._Custom7 = value;
					this.SendPropertyChanged("Custom7");
					this.OnCustom7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom8", DbType="VarChar(50)")]
		public string Custom8
		{
			get
			{
				return this._Custom8;
			}
			set
			{
				if ((this._Custom8 != value))
				{
					this.OnCustom8Changing(value);
					this.SendPropertyChanging();
					this._Custom8 = value;
					this.SendPropertyChanged("Custom8");
					this.OnCustom8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packages", DbType="VarChar(50)")]
		public string Packages
		{
			get
			{
				return this._Packages;
			}
			set
			{
				if ((this._Packages != value))
				{
					this.OnPackagesChanging(value);
					this.SendPropertyChanging();
					this._Packages = value;
					this.SendPropertyChanged("Packages");
					this.OnPackagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearbook", DbType="Bit")]
		public System.Nullable<bool> yearbook
		{
			get
			{
				return this._yearbook;
			}
			set
			{
				if ((this._yearbook != value))
				{
					this.OnyearbookChanging(value);
					this.SendPropertyChanging();
					this._yearbook = value;
					this.SendPropertyChanged("yearbook");
					this.OnyearbookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multipose", DbType="Bit")]
		public System.Nullable<bool> Multipose
		{
			get
			{
				return this._Multipose;
			}
			set
			{
				if ((this._Multipose != value))
				{
					this.OnMultiposeChanging(value);
					this.SendPropertyChanging();
					this._Multipose = value;
					this.SendPropertyChanged("Multipose");
					this.OnMultiposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticketcode", DbType="NVarChar(50)")]
		public string Ticketcode
		{
			get
			{
				return this._Ticketcode;
			}
			set
			{
				if ((this._Ticketcode != value))
				{
					this.OnTicketcodeChanging(value);
					this.SendPropertyChanging();
					this._Ticketcode = value;
					this.SendPropertyChanged("Ticketcode");
					this.OnTicketcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emailaddress", DbType="NVarChar(50)")]
		public string Emailaddress
		{
			get
			{
				return this._Emailaddress;
			}
			set
			{
				if ((this._Emailaddress != value))
				{
					this.OnEmailaddressChanging(value);
					this.SendPropertyChanging();
					this._Emailaddress = value;
					this.SendPropertyChanged("Emailaddress");
					this.OnEmailaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="VarChar(50)")]
		public string Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordStatus", DbType="VarChar(50)")]
		public string RecordStatus
		{
			get
			{
				return this._RecordStatus;
			}
			set
			{
				if ((this._RecordStatus != value))
				{
					this.OnRecordStatusChanging(value);
					this.SendPropertyChanging();
					this._RecordStatus = value;
					this.SendPropertyChanged("RecordStatus");
					this.OnRecordStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentIDPK", DbType="Int")]
		public System.Nullable<int> StudentIDPK
		{
			get
			{
				return this._StudentIDPK;
			}
			set
			{
				if ((this._StudentIDPK != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDPKChanging(value);
					this.SendPropertyChanging();
					this._StudentIDPK = value;
					this.SendPropertyChanged("StudentIDPK");
					this.OnStudentIDPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageNumber", DbType="VarChar(50)")]
		public string ImageNumber
		{
			get
			{
				return this._ImageNumber;
			}
			set
			{
				if ((this._ImageNumber != value))
				{
					this.OnImageNumberChanging(value);
					this.SendPropertyChanging();
					this._ImageNumber = value;
					this.SendPropertyChanged("ImageNumber");
					this.OnImageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admincd", DbType="Bit")]
		public System.Nullable<bool> Admincd
		{
			get
			{
				return this._Admincd;
			}
			set
			{
				if ((this._Admincd != value))
				{
					this.OnAdmincdChanging(value);
					this.SendPropertyChanging();
					this._Admincd = value;
					this.SendPropertyChanged("Admincd");
					this.OnAdmincdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalImageName", DbType="VarChar(150)")]
		public string OriginalImageName
		{
			get
			{
				return this._OriginalImageName;
			}
			set
			{
				if ((this._OriginalImageName != value))
				{
					this.OnOriginalImageNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalImageName = value;
					this.SendPropertyChanged("OriginalImageName");
					this.OnOriginalImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_failedRename", DbType="Bit")]
		public System.Nullable<bool> failedRename
		{
			get
			{
				return this._failedRename;
			}
			set
			{
				if ((this._failedRename != value))
				{
					this.OnfailedRenameChanging(value);
					this.SendPropertyChanging();
					this._failedRename = value;
					this.SendPropertyChanged("failedRename");
					this.OnfailedRenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImage_GroupClassPhoto", Storage="_GroupClassPhotos", ThisKey="ID", OtherKey="studentImageId")]
		public EntitySet<GroupClassPhoto> GroupClassPhotos
		{
			get
			{
				return this._GroupClassPhotos;
			}
			set
			{
				this._GroupClassPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImage_GroupItem", Storage="_GroupItems", ThisKey="ID", OtherKey="StudentPhotoID")]
		public EntitySet<GroupItem> GroupItems
		{
			get
			{
				return this._GroupItems;
			}
			set
			{
				this._GroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImage_StudentPhotoOrder", Storage="_StudentPhotoOrders", ThisKey="ID", OtherKey="StudentImageId")]
		public EntitySet<StudentPhotoOrder> StudentPhotoOrders
		{
			get
			{
				return this._StudentPhotoOrders;
			}
			set
			{
				this._StudentPhotoOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoShoot_StudentImage", Storage="_PhotoShoot", ThisKey="PhotoShootID", OtherKey="PhotoShotID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PhotoShoot PhotoShoot
		{
			get
			{
				return this._PhotoShoot.Entity;
			}
			set
			{
				PhotoShoot previousValue = this._PhotoShoot.Entity;
				if (((previousValue != value) 
							|| (this._PhotoShoot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoShoot.Entity = null;
						previousValue.StudentImages.Remove(this);
					}
					this._PhotoShoot.Entity = value;
					if ((value != null))
					{
						value.StudentImages.Add(this);
						this._PhotoShootID = value.PhotoShotID;
					}
					else
					{
						this._PhotoShootID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhotoShoot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentImage", Storage="_Student", ThisKey="StudentIDPK", OtherKey="ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentImages.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentImages.Add(this);
						this._StudentIDPK = value.ID;
					}
					else
					{
						this._StudentIDPK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentImage", Storage="_School", ThisKey="SchoolID", OtherKey="ID", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentImages.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentImages.Add(this);
						this._SchoolID = value.ID;
					}
					else
					{
						this._SchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupClassPhotos(GroupClassPhoto entity)
		{
			this.SendPropertyChanging();
			entity.StudentImage = this;
		}
		
		private void detach_GroupClassPhotos(GroupClassPhoto entity)
		{
			this.SendPropertyChanging();
			entity.StudentImage = null;
		}
		
		private void attach_GroupItems(GroupItem entity)
		{
			this.SendPropertyChanging();
			entity.StudentImage = this;
		}
		
		private void detach_GroupItems(GroupItem entity)
		{
			this.SendPropertyChanging();
			entity.StudentImage = null;
		}
		
		private void attach_StudentPhotoOrders(StudentPhotoOrder entity)
		{
			this.SendPropertyChanging();
			entity.StudentImage = this;
		}
		
		private void detach_StudentPhotoOrders(StudentPhotoOrder entity)
		{
			this.SendPropertyChanging();
			entity.StudentImage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NextOrder")]
	public partial class NextOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _NextOrderId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNextOrderIdChanging(System.Nullable<int> value);
    partial void OnNextOrderIdChanged();
    #endregion
		
		public NextOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOrderId", DbType="Int")]
		public System.Nullable<int> NextOrderId
		{
			get
			{
				return this._NextOrderId;
			}
			set
			{
				if ((this._NextOrderId != value))
				{
					this.OnNextOrderIdChanging(value);
					this.SendPropertyChanging();
					this._NextOrderId = value;
					this.SendPropertyChanged("NextOrderId");
					this.OnNextOrderIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Order")]
	public partial class View_Order
	{
		
		private System.Nullable<int> _StudentImageId;
		
		private System.Nullable<int> _OrderId;
		
		private string _ImageName;
		
		private string _SchoolName;
		
		private System.Nullable<int> _PhotoShootID;
		
		private string _Ticketcode;
		
		private string _Teacher;
		
		private string _Grade;
		
		private string _ImageNumber;
		
		private string _Packages;
		
		private string _Package;
		
		private string _StudentID;
		
		private string _Custom1;
		
		private int _StudentPhotoOrderId;
		
		private string _sp_SimplePhotoBillingCode;
		
		private System.Nullable<decimal> _LabCost;
		
		private string _VenueName;
		
		private string _sp_JobNumber;
		
		private System.Nullable<int> _GroupImageId;
		
		private System.Nullable<bool> _Fulfilled;
		
		private System.Nullable<int> _SimplePhotoOrderID;
		
		private string _Cust_FirstName;
		
		private string _Cust_LastName;
		
		private System.Nullable<System.DateTime> _VendorDate;
		
		private string _sp_ItemDescription;
		
		private string _sp_GroupName;
		
		private string _sp_Name;
		
		private string _sp_Password;
		
		private string _sp_PriceListName;
		
		private string _Comments;
		
		private string _sp_ProductType;
		
		private string _crop_dimensions;
		
		private string _crop_orientation;
		
		private string _crop_coordinates;
		
		private string _VendorOrderNo;
		
		private string _Ship_FirstName;
		
		private string _Ship_LastName;
		
		private string _Ship_Address;
		
		private string _Ship_City;
		
		private string _Ship_State;
		
		private string _Ship_PostalCode;
		
		private string _Ship_Country;
		
		private string _Ship_Phone;
		
		private string _Cust_Email;
		
		public View_Order()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentImageId", DbType="Int")]
		public System.Nullable<int> StudentImageId
		{
			get
			{
				return this._StudentImageId;
			}
			set
			{
				if ((this._StudentImageId != value))
				{
					this._StudentImageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this._OrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(150)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this._ImageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(150)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoShootID", DbType="Int")]
		public System.Nullable<int> PhotoShootID
		{
			get
			{
				return this._PhotoShootID;
			}
			set
			{
				if ((this._PhotoShootID != value))
				{
					this._PhotoShootID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticketcode", DbType="NVarChar(50)")]
		public string Ticketcode
		{
			get
			{
				return this._Ticketcode;
			}
			set
			{
				if ((this._Ticketcode != value))
				{
					this._Ticketcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher", DbType="VarChar(50)")]
		public string Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				if ((this._Teacher != value))
				{
					this._Teacher = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageNumber", DbType="VarChar(50)")]
		public string ImageNumber
		{
			get
			{
				return this._ImageNumber;
			}
			set
			{
				if ((this._ImageNumber != value))
				{
					this._ImageNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packages", DbType="VarChar(50)")]
		public string Packages
		{
			get
			{
				return this._Packages;
			}
			set
			{
				if ((this._Packages != value))
				{
					this._Packages = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package", DbType="VarChar(61)")]
		public string Package
		{
			get
			{
				return this._Package;
			}
			set
			{
				if ((this._Package != value))
				{
					this._Package = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom1", DbType="VarChar(50)")]
		public string Custom1
		{
			get
			{
				return this._Custom1;
			}
			set
			{
				if ((this._Custom1 != value))
				{
					this._Custom1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhotoOrderId", DbType="Int NOT NULL")]
		public int StudentPhotoOrderId
		{
			get
			{
				return this._StudentPhotoOrderId;
			}
			set
			{
				if ((this._StudentPhotoOrderId != value))
				{
					this._StudentPhotoOrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_SimplePhotoBillingCode", DbType="VarChar(10)")]
		public string sp_SimplePhotoBillingCode
		{
			get
			{
				return this._sp_SimplePhotoBillingCode;
			}
			set
			{
				if ((this._sp_SimplePhotoBillingCode != value))
				{
					this._sp_SimplePhotoBillingCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LabCost
		{
			get
			{
				return this._LabCost;
			}
			set
			{
				if ((this._LabCost != value))
				{
					this._LabCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueName", DbType="VarChar(100)")]
		public string VenueName
		{
			get
			{
				return this._VenueName;
			}
			set
			{
				if ((this._VenueName != value))
				{
					this._VenueName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_JobNumber", DbType="VarChar(50)")]
		public string sp_JobNumber
		{
			get
			{
				return this._sp_JobNumber;
			}
			set
			{
				if ((this._sp_JobNumber != value))
				{
					this._sp_JobNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupImageId", DbType="Int")]
		public System.Nullable<int> GroupImageId
		{
			get
			{
				return this._GroupImageId;
			}
			set
			{
				if ((this._GroupImageId != value))
				{
					this._GroupImageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fulfilled", DbType="Bit")]
		public System.Nullable<bool> Fulfilled
		{
			get
			{
				return this._Fulfilled;
			}
			set
			{
				if ((this._Fulfilled != value))
				{
					this._Fulfilled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplePhotoOrderID", DbType="Int")]
		public System.Nullable<int> SimplePhotoOrderID
		{
			get
			{
				return this._SimplePhotoOrderID;
			}
			set
			{
				if ((this._SimplePhotoOrderID != value))
				{
					this._SimplePhotoOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_FirstName", DbType="VarChar(50)")]
		public string Cust_FirstName
		{
			get
			{
				return this._Cust_FirstName;
			}
			set
			{
				if ((this._Cust_FirstName != value))
				{
					this._Cust_FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_LastName", DbType="VarChar(50)")]
		public string Cust_LastName
		{
			get
			{
				return this._Cust_LastName;
			}
			set
			{
				if ((this._Cust_LastName != value))
				{
					this._Cust_LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VendorDate
		{
			get
			{
				return this._VendorDate;
			}
			set
			{
				if ((this._VendorDate != value))
				{
					this._VendorDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_ItemDescription", DbType="NVarChar(250)")]
		public string sp_ItemDescription
		{
			get
			{
				return this._sp_ItemDescription;
			}
			set
			{
				if ((this._sp_ItemDescription != value))
				{
					this._sp_ItemDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_GroupName", DbType="VarChar(100)")]
		public string sp_GroupName
		{
			get
			{
				return this._sp_GroupName;
			}
			set
			{
				if ((this._sp_GroupName != value))
				{
					this._sp_GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_Name", DbType="VarChar(80)")]
		public string sp_Name
		{
			get
			{
				return this._sp_Name;
			}
			set
			{
				if ((this._sp_Name != value))
				{
					this._sp_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_Password", DbType="VarChar(70)")]
		public string sp_Password
		{
			get
			{
				return this._sp_Password;
			}
			set
			{
				if ((this._sp_Password != value))
				{
					this._sp_Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_PriceListName", DbType="VarChar(100)")]
		public string sp_PriceListName
		{
			get
			{
				return this._sp_PriceListName;
			}
			set
			{
				if ((this._sp_PriceListName != value))
				{
					this._sp_PriceListName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_ProductType", DbType="VarChar(50)")]
		public string sp_ProductType
		{
			get
			{
				return this._sp_ProductType;
			}
			set
			{
				if ((this._sp_ProductType != value))
				{
					this._sp_ProductType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crop_dimensions", DbType="VarChar(20)")]
		public string crop_dimensions
		{
			get
			{
				return this._crop_dimensions;
			}
			set
			{
				if ((this._crop_dimensions != value))
				{
					this._crop_dimensions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crop_orientation", DbType="VarChar(10)")]
		public string crop_orientation
		{
			get
			{
				return this._crop_orientation;
			}
			set
			{
				if ((this._crop_orientation != value))
				{
					this._crop_orientation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crop_coordinates", DbType="VarChar(20)")]
		public string crop_coordinates
		{
			get
			{
				return this._crop_coordinates;
			}
			set
			{
				if ((this._crop_coordinates != value))
				{
					this._crop_coordinates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorOrderNo", DbType="VarChar(50)")]
		public string VendorOrderNo
		{
			get
			{
				return this._VendorOrderNo;
			}
			set
			{
				if ((this._VendorOrderNo != value))
				{
					this._VendorOrderNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_FirstName", DbType="VarChar(50)")]
		public string Ship_FirstName
		{
			get
			{
				return this._Ship_FirstName;
			}
			set
			{
				if ((this._Ship_FirstName != value))
				{
					this._Ship_FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_LastName", DbType="VarChar(50)")]
		public string Ship_LastName
		{
			get
			{
				return this._Ship_LastName;
			}
			set
			{
				if ((this._Ship_LastName != value))
				{
					this._Ship_LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Address", DbType="VarChar(150)")]
		public string Ship_Address
		{
			get
			{
				return this._Ship_Address;
			}
			set
			{
				if ((this._Ship_Address != value))
				{
					this._Ship_Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_City", DbType="VarChar(25)")]
		public string Ship_City
		{
			get
			{
				return this._Ship_City;
			}
			set
			{
				if ((this._Ship_City != value))
				{
					this._Ship_City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_State", DbType="VarChar(20)")]
		public string Ship_State
		{
			get
			{
				return this._Ship_State;
			}
			set
			{
				if ((this._Ship_State != value))
				{
					this._Ship_State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_PostalCode", DbType="VarChar(30)")]
		public string Ship_PostalCode
		{
			get
			{
				return this._Ship_PostalCode;
			}
			set
			{
				if ((this._Ship_PostalCode != value))
				{
					this._Ship_PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Country", DbType="VarChar(50)")]
		public string Ship_Country
		{
			get
			{
				return this._Ship_Country;
			}
			set
			{
				if ((this._Ship_Country != value))
				{
					this._Ship_Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Phone", DbType="VarChar(20)")]
		public string Ship_Phone
		{
			get
			{
				return this._Ship_Phone;
			}
			set
			{
				if ((this._Ship_Phone != value))
				{
					this._Ship_Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Email", DbType="VarChar(50)")]
		public string Cust_Email
		{
			get
			{
				return this._Cust_Email;
			}
			set
			{
				if ((this._Cust_Email != value))
				{
					this._Cust_Email = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IQAccounts")]
	public partial class IQAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IQAccountCode;
		
		private string _Description;
		
		private EntitySet<IQPriceSheet> _IQPriceSheets;
		
		private EntitySet<IQVandoSetting> _IQVandoSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIQAccountCodeChanging(string value);
    partial void OnIQAccountCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public IQAccount()
		{
			this._IQPriceSheets = new EntitySet<IQPriceSheet>(new Action<IQPriceSheet>(this.attach_IQPriceSheets), new Action<IQPriceSheet>(this.detach_IQPriceSheets));
			this._IQVandoSettings = new EntitySet<IQVandoSetting>(new Action<IQVandoSetting>(this.attach_IQVandoSettings), new Action<IQVandoSetting>(this.detach_IQVandoSettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IQAccountCode", DbType="VarChar(50)")]
		public string IQAccountCode
		{
			get
			{
				return this._IQAccountCode;
			}
			set
			{
				if ((this._IQAccountCode != value))
				{
					this.OnIQAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._IQAccountCode = value;
					this.SendPropertyChanged("IQAccountCode");
					this.OnIQAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IQAccount_IQPriceSheet", Storage="_IQPriceSheets", ThisKey="Id", OtherKey="IQAccountId")]
		public EntitySet<IQPriceSheet> IQPriceSheets
		{
			get
			{
				return this._IQPriceSheets;
			}
			set
			{
				this._IQPriceSheets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IQAccount_IQVandoSetting", Storage="_IQVandoSettings", ThisKey="Id", OtherKey="IQAccountId")]
		public EntitySet<IQVandoSetting> IQVandoSettings
		{
			get
			{
				return this._IQVandoSettings;
			}
			set
			{
				this._IQVandoSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IQPriceSheets(IQPriceSheet entity)
		{
			this.SendPropertyChanging();
			entity.IQAccount = this;
		}
		
		private void detach_IQPriceSheets(IQPriceSheet entity)
		{
			this.SendPropertyChanging();
			entity.IQAccount = null;
		}
		
		private void attach_IQVandoSettings(IQVandoSetting entity)
		{
			this.SendPropertyChanging();
			entity.IQAccount = this;
		}
		
		private void detach_IQVandoSettings(IQVandoSetting entity)
		{
			this.SendPropertyChanging();
			entity.IQAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IQPriceSheet")]
	public partial class IQPriceSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IQAccountId;
		
		private System.Nullable<int> _IQPriceSheetId;
		
		private string _Description;
		
		private EntityRef<IQAccount> _IQAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIQAccountIdChanging(System.Nullable<int> value);
    partial void OnIQAccountIdChanged();
    partial void OnIQPriceSheetIdChanging(System.Nullable<int> value);
    partial void OnIQPriceSheetIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public IQPriceSheet()
		{
			this._IQAccount = default(EntityRef<IQAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IQAccountId", DbType="Int")]
		public System.Nullable<int> IQAccountId
		{
			get
			{
				return this._IQAccountId;
			}
			set
			{
				if ((this._IQAccountId != value))
				{
					if (this._IQAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIQAccountIdChanging(value);
					this.SendPropertyChanging();
					this._IQAccountId = value;
					this.SendPropertyChanged("IQAccountId");
					this.OnIQAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IQPriceSheetId", DbType="Int")]
		public System.Nullable<int> IQPriceSheetId
		{
			get
			{
				return this._IQPriceSheetId;
			}
			set
			{
				if ((this._IQPriceSheetId != value))
				{
					this.OnIQPriceSheetIdChanging(value);
					this.SendPropertyChanging();
					this._IQPriceSheetId = value;
					this.SendPropertyChanged("IQPriceSheetId");
					this.OnIQPriceSheetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IQAccount_IQPriceSheet", Storage="_IQAccount", ThisKey="IQAccountId", OtherKey="Id", IsForeignKey=true)]
		public IQAccount IQAccount
		{
			get
			{
				return this._IQAccount.Entity;
			}
			set
			{
				IQAccount previousValue = this._IQAccount.Entity;
				if (((previousValue != value) 
							|| (this._IQAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IQAccount.Entity = null;
						previousValue.IQPriceSheets.Remove(this);
					}
					this._IQAccount.Entity = value;
					if ((value != null))
					{
						value.IQPriceSheets.Add(this);
						this._IQAccountId = value.Id;
					}
					else
					{
						this._IQAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IQAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentImport")]
	public partial class StudentImport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SchoolID;
		
		private string _Description;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Data.Linq.Binary _DataFile;
		
		private System.Nullable<bool> _IsValidated;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnDataFileChanging(System.Data.Linq.Binary value);
    partial void OnDataFileChanged();
    partial void OnIsValidatedChanging(System.Nullable<bool> value);
    partial void OnIsValidatedChanged();
    #endregion
		
		public StudentImport()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFile", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DataFile
		{
			get
			{
				return this._DataFile;
			}
			set
			{
				if ((this._DataFile != value))
				{
					this.OnDataFileChanging(value);
					this.SendPropertyChanging();
					this._DataFile = value;
					this.SendPropertyChanged("DataFile");
					this.OnDataFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidated", DbType="Bit")]
		public System.Nullable<bool> IsValidated
		{
			get
			{
				return this._IsValidated;
			}
			set
			{
				if ((this._IsValidated != value))
				{
					this.OnIsValidatedChanging(value);
					this.SendPropertyChanging();
					this._IsValidated = value;
					this.SendPropertyChanged("IsValidated");
					this.OnIsValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImport_Student", Storage="_Students", ThisKey="ID", OtherKey="StudentImportID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentImport", Storage="_School", ThisKey="SchoolID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentImports.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentImports.Add(this);
						this._SchoolID = value.ID;
					}
					else
					{
						this._SchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.StudentImport = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.StudentImport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IQVandoSettings")]
	public partial class IQVandoSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IQAccountId;
		
		private System.Nullable<int> _IQVandoId;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDefault;
		
		private EntityRef<IQAccount> _IQAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIQAccountIdChanging(System.Nullable<int> value);
    partial void OnIQAccountIdChanged();
    partial void OnIQVandoIdChanging(System.Nullable<int> value);
    partial void OnIQVandoIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public IQVandoSetting()
		{
			this._IQAccount = default(EntityRef<IQAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IQAccountId", DbType="Int")]
		public System.Nullable<int> IQAccountId
		{
			get
			{
				return this._IQAccountId;
			}
			set
			{
				if ((this._IQAccountId != value))
				{
					if (this._IQAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIQAccountIdChanging(value);
					this.SendPropertyChanging();
					this._IQAccountId = value;
					this.SendPropertyChanged("IQAccountId");
					this.OnIQAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IQVandoId", DbType="Int")]
		public System.Nullable<int> IQVandoId
		{
			get
			{
				return this._IQVandoId;
			}
			set
			{
				if ((this._IQVandoId != value))
				{
					this.OnIQVandoIdChanging(value);
					this.SendPropertyChanging();
					this._IQVandoId = value;
					this.SendPropertyChanged("IQVandoId");
					this.OnIQVandoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IQAccount_IQVandoSetting", Storage="_IQAccount", ThisKey="IQAccountId", OtherKey="Id", IsForeignKey=true)]
		public IQAccount IQAccount
		{
			get
			{
				return this._IQAccount.Entity;
			}
			set
			{
				IQAccount previousValue = this._IQAccount.Entity;
				if (((previousValue != value) 
							|| (this._IQAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IQAccount.Entity = null;
						previousValue.IQVandoSettings.Remove(this);
					}
					this._IQAccount.Entity = value;
					if ((value != null))
					{
						value.IQVandoSettings.Add(this);
						this._IQAccountId = value.Id;
					}
					else
					{
						this._IQAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IQAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SimplePhotoPriceSheet")]
	public partial class SimplePhotoPriceSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SPPriceSheetId;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSPPriceSheetIdChanging(System.Nullable<int> value);
    partial void OnSPPriceSheetIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SimplePhotoPriceSheet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPPriceSheetId", DbType="Int")]
		public System.Nullable<int> SPPriceSheetId
		{
			get
			{
				return this._SPPriceSheetId;
			}
			set
			{
				if ((this._SPPriceSheetId != value))
				{
					this.OnSPPriceSheetIdChanging(value);
					this.SendPropertyChanging();
					this._SPPriceSheetId = value;
					this.SendPropertyChanged("SPPriceSheetId");
					this.OnSPPriceSheetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPackages")]
	public partial class OrderPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Item;
		
		private string _Package;
		
		private string _SimplePhotoItemId;
		
		private System.Nullable<decimal> _DefaultPrice;
		
		private System.Nullable<bool> _Seniors;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<decimal> _Weight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnPackageChanging(string value);
    partial void OnPackageChanged();
    partial void OnSimplePhotoItemIdChanging(string value);
    partial void OnSimplePhotoItemIdChanged();
    partial void OnDefaultPriceChanging(System.Nullable<decimal> value);
    partial void OnDefaultPriceChanged();
    partial void OnSeniorsChanging(System.Nullable<bool> value);
    partial void OnSeniorsChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    #endregion
		
		public OrderPackage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(30)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package", DbType="VarChar(150)")]
		public string Package
		{
			get
			{
				return this._Package;
			}
			set
			{
				if ((this._Package != value))
				{
					this.OnPackageChanging(value);
					this.SendPropertyChanging();
					this._Package = value;
					this.SendPropertyChanged("Package");
					this.OnPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplePhotoItemId", DbType="VarChar(30)")]
		public string SimplePhotoItemId
		{
			get
			{
				return this._SimplePhotoItemId;
			}
			set
			{
				if ((this._SimplePhotoItemId != value))
				{
					this.OnSimplePhotoItemIdChanging(value);
					this.SendPropertyChanging();
					this._SimplePhotoItemId = value;
					this.SendPropertyChanged("SimplePhotoItemId");
					this.OnSimplePhotoItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPrice", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> DefaultPrice
		{
			get
			{
				return this._DefaultPrice;
			}
			set
			{
				if ((this._DefaultPrice != value))
				{
					this.OnDefaultPriceChanging(value);
					this.SendPropertyChanging();
					this._DefaultPrice = value;
					this.SendPropertyChanged("DefaultPrice");
					this.OnDefaultPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seniors", DbType="Bit")]
		public System.Nullable<bool> Seniors
		{
			get
			{
				return this._Seniors;
			}
			set
			{
				if ((this._Seniors != value))
				{
					this.OnSeniorsChanging(value);
					this.SendPropertyChanging();
					this._Seniors = value;
					this.SendPropertyChanged("Seniors");
					this.OnSeniorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public User()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Activity", Storage="_Activities", ThisKey="Id", OtherKey="UserName")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Studio")]
	public partial class Studio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PFStudioId;
		
		private string _StudioName;
		
		private string _PrimaryContact;
		
		private string _Email;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Phone;
		
		private string _Zip;
		
		private EntitySet<School> _Schools;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPFStudioIdChanging(string value);
    partial void OnPFStudioIdChanged();
    partial void OnStudioNameChanging(string value);
    partial void OnStudioNameChanged();
    partial void OnPrimaryContactChanging(string value);
    partial void OnPrimaryContactChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    #endregion
		
		public Studio()
		{
			this._Schools = new EntitySet<School>(new Action<School>(this.attach_Schools), new Action<School>(this.detach_Schools));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PFStudioId", DbType="VarChar(20)")]
		public string PFStudioId
		{
			get
			{
				return this._PFStudioId;
			}
			set
			{
				if ((this._PFStudioId != value))
				{
					this.OnPFStudioIdChanging(value);
					this.SendPropertyChanging();
					this._PFStudioId = value;
					this.SendPropertyChanged("PFStudioId");
					this.OnPFStudioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudioName", DbType="VarChar(50)")]
		public string StudioName
		{
			get
			{
				return this._StudioName;
			}
			set
			{
				if ((this._StudioName != value))
				{
					this.OnStudioNameChanging(value);
					this.SendPropertyChanging();
					this._StudioName = value;
					this.SendPropertyChanged("StudioName");
					this.OnStudioNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContact", DbType="VarChar(50)")]
		public string PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(20)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studio_School", Storage="_Schools", ThisKey="Id", OtherKey="StudioId")]
		public EntitySet<School> Schools
		{
			get
			{
				return this._Schools;
			}
			set
			{
				this._Schools.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schools(School entity)
		{
			this.SendPropertyChanging();
			entity.Studio = this;
		}
		
		private void detach_Schools(School entity)
		{
			this.SendPropertyChanging();
			entity.Studio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SimplePhotoExportBatch")]
	public partial class SimplePhotoExportBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ExportType;
		
		private string _ExportPath;
		
		private System.DateTime _CreatedOn;
		
		private string _CreatedBy;
		
		private string _GroupsExported;
		
		private System.Nullable<int> _NoOfImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExportTypeChanging(string value);
    partial void OnExportTypeChanged();
    partial void OnExportPathChanging(string value);
    partial void OnExportPathChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnGroupsExportedChanging(string value);
    partial void OnGroupsExportedChanged();
    partial void OnNoOfImagesChanging(System.Nullable<int> value);
    partial void OnNoOfImagesChanged();
    #endregion
		
		public SimplePhotoExportBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportType", DbType="VarChar(10)")]
		public string ExportType
		{
			get
			{
				return this._ExportType;
			}
			set
			{
				if ((this._ExportType != value))
				{
					this.OnExportTypeChanging(value);
					this.SendPropertyChanging();
					this._ExportType = value;
					this.SendPropertyChanged("ExportType");
					this.OnExportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportPath", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ExportPath
		{
			get
			{
				return this._ExportPath;
			}
			set
			{
				if ((this._ExportPath != value))
				{
					this.OnExportPathChanging(value);
					this.SendPropertyChanging();
					this._ExportPath = value;
					this.SendPropertyChanged("ExportPath");
					this.OnExportPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(20)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupsExported", DbType="VarChar(20)")]
		public string GroupsExported
		{
			get
			{
				return this._GroupsExported;
			}
			set
			{
				if ((this._GroupsExported != value))
				{
					this.OnGroupsExportedChanging(value);
					this.SendPropertyChanging();
					this._GroupsExported = value;
					this.SendPropertyChanged("GroupsExported");
					this.OnGroupsExportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfImages", DbType="Int")]
		public System.Nullable<int> NoOfImages
		{
			get
			{
				return this._NoOfImages;
			}
			set
			{
				if ((this._NoOfImages != value))
				{
					this.OnNoOfImagesChanging(value);
					this.SendPropertyChanging();
					this._NoOfImages = value;
					this.SendPropertyChanged("NoOfImages");
					this.OnNoOfImagesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhotoShoot")]
	public partial class PhotoShoot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhotoShotID;
		
		private System.Nullable<int> _PhotographyjobID;
		
		private string _PhotoShotName;
		
		private string _ImageFolder;
		
		private System.Nullable<System.DateTime> _PhotoShotDate;
		
		private System.Nullable<bool> _isReduced;
		
		private System.Nullable<bool> _RenameSourceImages;
		
		private System.Nullable<bool> _IsValidated;
		
		private string _Job_;
		
		private System.Nullable<bool> _OnCalendar;
		
		private System.Nullable<bool> _Scheduled;
		
		private System.Nullable<int> _PhotoshootType;
		
		private string _Season;
		
		private EntitySet<StudentImage> _StudentImages;
		
		private EntitySet<PhotoshootWorkflowItem> _PhotoshootWorkflowItems;
		
		private EntityRef<PhotographyJob> _PhotographyJob;
		
		private EntityRef<PhotoshootTypeTable> _PhotoshootTypeTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoShotIDChanging(int value);
    partial void OnPhotoShotIDChanged();
    partial void OnPhotographyjobIDChanging(System.Nullable<int> value);
    partial void OnPhotographyjobIDChanged();
    partial void OnPhotoShotNameChanging(string value);
    partial void OnPhotoShotNameChanged();
    partial void OnImageFolderChanging(string value);
    partial void OnImageFolderChanged();
    partial void OnPhotoShotDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPhotoShotDateChanged();
    partial void OnisReducedChanging(System.Nullable<bool> value);
    partial void OnisReducedChanged();
    partial void OnRenameSourceImagesChanging(System.Nullable<bool> value);
    partial void OnRenameSourceImagesChanged();
    partial void OnIsValidatedChanging(System.Nullable<bool> value);
    partial void OnIsValidatedChanged();
    partial void OnJob_Changing(string value);
    partial void OnJob_Changed();
    partial void OnOnCalendarChanging(System.Nullable<bool> value);
    partial void OnOnCalendarChanged();
    partial void OnScheduledChanging(System.Nullable<bool> value);
    partial void OnScheduledChanged();
    partial void OnPhotoshootTypeChanging(System.Nullable<int> value);
    partial void OnPhotoshootTypeChanged();
    partial void OnSeasonChanging(string value);
    partial void OnSeasonChanged();
    #endregion
		
		public PhotoShoot()
		{
			this._StudentImages = new EntitySet<StudentImage>(new Action<StudentImage>(this.attach_StudentImages), new Action<StudentImage>(this.detach_StudentImages));
			this._PhotoshootWorkflowItems = new EntitySet<PhotoshootWorkflowItem>(new Action<PhotoshootWorkflowItem>(this.attach_PhotoshootWorkflowItems), new Action<PhotoshootWorkflowItem>(this.detach_PhotoshootWorkflowItems));
			this._PhotographyJob = default(EntityRef<PhotographyJob>);
			this._PhotoshootTypeTable = default(EntityRef<PhotoshootTypeTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoShotID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhotoShotID
		{
			get
			{
				return this._PhotoShotID;
			}
			set
			{
				if ((this._PhotoShotID != value))
				{
					this.OnPhotoShotIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoShotID = value;
					this.SendPropertyChanged("PhotoShotID");
					this.OnPhotoShotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotographyjobID", DbType="Int")]
		public System.Nullable<int> PhotographyjobID
		{
			get
			{
				return this._PhotographyjobID;
			}
			set
			{
				if ((this._PhotographyjobID != value))
				{
					if (this._PhotographyJob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotographyjobIDChanging(value);
					this.SendPropertyChanging();
					this._PhotographyjobID = value;
					this.SendPropertyChanged("PhotographyjobID");
					this.OnPhotographyjobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoShotName", DbType="NVarChar(50)")]
		public string PhotoShotName
		{
			get
			{
				return this._PhotoShotName;
			}
			set
			{
				if ((this._PhotoShotName != value))
				{
					this.OnPhotoShotNameChanging(value);
					this.SendPropertyChanging();
					this._PhotoShotName = value;
					this.SendPropertyChanged("PhotoShotName");
					this.OnPhotoShotNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFolder", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ImageFolder
		{
			get
			{
				return this._ImageFolder;
			}
			set
			{
				if ((this._ImageFolder != value))
				{
					this.OnImageFolderChanging(value);
					this.SendPropertyChanging();
					this._ImageFolder = value;
					this.SendPropertyChanged("ImageFolder");
					this.OnImageFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoShotDate", DbType="Date")]
		public System.Nullable<System.DateTime> PhotoShotDate
		{
			get
			{
				return this._PhotoShotDate;
			}
			set
			{
				if ((this._PhotoShotDate != value))
				{
					this.OnPhotoShotDateChanging(value);
					this.SendPropertyChanging();
					this._PhotoShotDate = value;
					this.SendPropertyChanged("PhotoShotDate");
					this.OnPhotoShotDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isReduced", DbType="Bit")]
		public System.Nullable<bool> isReduced
		{
			get
			{
				return this._isReduced;
			}
			set
			{
				if ((this._isReduced != value))
				{
					this.OnisReducedChanging(value);
					this.SendPropertyChanging();
					this._isReduced = value;
					this.SendPropertyChanged("isReduced");
					this.OnisReducedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenameSourceImages", DbType="Bit")]
		public System.Nullable<bool> RenameSourceImages
		{
			get
			{
				return this._RenameSourceImages;
			}
			set
			{
				if ((this._RenameSourceImages != value))
				{
					this.OnRenameSourceImagesChanging(value);
					this.SendPropertyChanging();
					this._RenameSourceImages = value;
					this.SendPropertyChanged("RenameSourceImages");
					this.OnRenameSourceImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidated", DbType="Bit")]
		public System.Nullable<bool> IsValidated
		{
			get
			{
				return this._IsValidated;
			}
			set
			{
				if ((this._IsValidated != value))
				{
					this.OnIsValidatedChanging(value);
					this.SendPropertyChanging();
					this._IsValidated = value;
					this.SendPropertyChanged("IsValidated");
					this.OnIsValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Job#", Storage="_Job_", DbType="VarChar(12)")]
		public string Job_
		{
			get
			{
				return this._Job_;
			}
			set
			{
				if ((this._Job_ != value))
				{
					this.OnJob_Changing(value);
					this.SendPropertyChanging();
					this._Job_ = value;
					this.SendPropertyChanged("Job_");
					this.OnJob_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnCalendar", DbType="Bit")]
		public System.Nullable<bool> OnCalendar
		{
			get
			{
				return this._OnCalendar;
			}
			set
			{
				if ((this._OnCalendar != value))
				{
					this.OnOnCalendarChanging(value);
					this.SendPropertyChanging();
					this._OnCalendar = value;
					this.SendPropertyChanged("OnCalendar");
					this.OnOnCalendarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scheduled", DbType="Bit")]
		public System.Nullable<bool> Scheduled
		{
			get
			{
				return this._Scheduled;
			}
			set
			{
				if ((this._Scheduled != value))
				{
					this.OnScheduledChanging(value);
					this.SendPropertyChanging();
					this._Scheduled = value;
					this.SendPropertyChanged("Scheduled");
					this.OnScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoshootType", DbType="Int")]
		public System.Nullable<int> PhotoshootType
		{
			get
			{
				return this._PhotoshootType;
			}
			set
			{
				if ((this._PhotoshootType != value))
				{
					if (this._PhotoshootTypeTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoshootTypeChanging(value);
					this.SendPropertyChanging();
					this._PhotoshootType = value;
					this.SendPropertyChanged("PhotoshootType");
					this.OnPhotoshootTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Season", DbType="VarChar(10)")]
		public string Season
		{
			get
			{
				return this._Season;
			}
			set
			{
				if ((this._Season != value))
				{
					this.OnSeasonChanging(value);
					this.SendPropertyChanging();
					this._Season = value;
					this.SendPropertyChanged("Season");
					this.OnSeasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoShoot_StudentImage", Storage="_StudentImages", ThisKey="PhotoShotID", OtherKey="PhotoShootID")]
		public EntitySet<StudentImage> StudentImages
		{
			get
			{
				return this._StudentImages;
			}
			set
			{
				this._StudentImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoShoot_PhotoshootWorkflowItem", Storage="_PhotoshootWorkflowItems", ThisKey="PhotoShotID", OtherKey="PhotoShootID")]
		public EntitySet<PhotoshootWorkflowItem> PhotoshootWorkflowItems
		{
			get
			{
				return this._PhotoshootWorkflowItems;
			}
			set
			{
				this._PhotoshootWorkflowItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotographyJob_PhotoShoot", Storage="_PhotographyJob", ThisKey="PhotographyjobID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PhotographyJob PhotographyJob
		{
			get
			{
				return this._PhotographyJob.Entity;
			}
			set
			{
				PhotographyJob previousValue = this._PhotographyJob.Entity;
				if (((previousValue != value) 
							|| (this._PhotographyJob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotographyJob.Entity = null;
						previousValue.PhotoShoots.Remove(this);
					}
					this._PhotographyJob.Entity = value;
					if ((value != null))
					{
						value.PhotoShoots.Add(this);
						this._PhotographyjobID = value.ID;
					}
					else
					{
						this._PhotographyjobID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhotographyJob");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoshootTypeTable_PhotoShoot", Storage="_PhotoshootTypeTable", ThisKey="PhotoshootType", OtherKey="Id", IsForeignKey=true)]
		public PhotoshootTypeTable PhotoshootTypeTable
		{
			get
			{
				return this._PhotoshootTypeTable.Entity;
			}
			set
			{
				PhotoshootTypeTable previousValue = this._PhotoshootTypeTable.Entity;
				if (((previousValue != value) 
							|| (this._PhotoshootTypeTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoshootTypeTable.Entity = null;
						previousValue.PhotoShoots.Remove(this);
					}
					this._PhotoshootTypeTable.Entity = value;
					if ((value != null))
					{
						value.PhotoShoots.Add(this);
						this._PhotoshootType = value.Id;
					}
					else
					{
						this._PhotoshootType = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhotoshootTypeTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentImages(StudentImage entity)
		{
			this.SendPropertyChanging();
			entity.PhotoShoot = this;
		}
		
		private void detach_StudentImages(StudentImage entity)
		{
			this.SendPropertyChanging();
			entity.PhotoShoot = null;
		}
		
		private void attach_PhotoshootWorkflowItems(PhotoshootWorkflowItem entity)
		{
			this.SendPropertyChanging();
			entity.PhotoShoot = this;
		}
		
		private void detach_PhotoshootWorkflowItems(PhotoshootWorkflowItem entity)
		{
			this.SendPropertyChanging();
			entity.PhotoShoot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhotoshootTypeTable")]
	public partial class PhotoshootTypeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PhotoshootType;
		
		private EntitySet<PhotoShoot> _PhotoShoots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhotoshootTypeChanging(string value);
    partial void OnPhotoshootTypeChanged();
    #endregion
		
		public PhotoshootTypeTable()
		{
			this._PhotoShoots = new EntitySet<PhotoShoot>(new Action<PhotoShoot>(this.attach_PhotoShoots), new Action<PhotoShoot>(this.detach_PhotoShoots));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoshootType", DbType="VarChar(50)")]
		public string PhotoshootType
		{
			get
			{
				return this._PhotoshootType;
			}
			set
			{
				if ((this._PhotoshootType != value))
				{
					this.OnPhotoshootTypeChanging(value);
					this.SendPropertyChanging();
					this._PhotoshootType = value;
					this.SendPropertyChanged("PhotoshootType");
					this.OnPhotoshootTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoshootTypeTable_PhotoShoot", Storage="_PhotoShoots", ThisKey="Id", OtherKey="PhotoshootType")]
		public EntitySet<PhotoShoot> PhotoShoots
		{
			get
			{
				return this._PhotoShoots;
			}
			set
			{
				this._PhotoShoots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhotoShoots(PhotoShoot entity)
		{
			this.SendPropertyChanging();
			entity.PhotoshootTypeTable = this;
		}
		
		private void detach_PhotoShoots(PhotoShoot entity)
		{
			this.SendPropertyChanging();
			entity.PhotoshootTypeTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowCollection")]
	public partial class WorkflowCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<int> _ItemClassTypeId;
		
		private EntitySet<WorkflowCollectionItem> _WorkflowCollectionItems;
		
		private EntityRef<ItemClassType> _ItemClassType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnItemClassTypeIdChanging(System.Nullable<int> value);
    partial void OnItemClassTypeIdChanged();
    #endregion
		
		public WorkflowCollection()
		{
			this._WorkflowCollectionItems = new EntitySet<WorkflowCollectionItem>(new Action<WorkflowCollectionItem>(this.attach_WorkflowCollectionItems), new Action<WorkflowCollectionItem>(this.detach_WorkflowCollectionItems));
			this._ItemClassType = default(EntityRef<ItemClassType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemClassTypeId", DbType="Int")]
		public System.Nullable<int> ItemClassTypeId
		{
			get
			{
				return this._ItemClassTypeId;
			}
			set
			{
				if ((this._ItemClassTypeId != value))
				{
					if (this._ItemClassType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemClassTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ItemClassTypeId = value;
					this.SendPropertyChanged("ItemClassTypeId");
					this.OnItemClassTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowCollection_WorkflowCollectionItem", Storage="_WorkflowCollectionItems", ThisKey="Id", OtherKey="WorkflowCollectionId")]
		public EntitySet<WorkflowCollectionItem> WorkflowCollectionItems
		{
			get
			{
				return this._WorkflowCollectionItems;
			}
			set
			{
				this._WorkflowCollectionItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemClassType_WorkflowCollection", Storage="_ItemClassType", ThisKey="ItemClassTypeId", OtherKey="Id", IsForeignKey=true)]
		public ItemClassType ItemClassType
		{
			get
			{
				return this._ItemClassType.Entity;
			}
			set
			{
				ItemClassType previousValue = this._ItemClassType.Entity;
				if (((previousValue != value) 
							|| (this._ItemClassType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemClassType.Entity = null;
						previousValue.WorkflowCollections.Remove(this);
					}
					this._ItemClassType.Entity = value;
					if ((value != null))
					{
						value.WorkflowCollections.Add(this);
						this._ItemClassTypeId = value.Id;
					}
					else
					{
						this._ItemClassTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ItemClassType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowCollectionItems(WorkflowCollectionItem entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowCollection = this;
		}
		
		private void detach_WorkflowCollectionItems(WorkflowCollectionItem entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowCollection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemClassType")]
	public partial class ItemClassType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClassType;
		
		private EntitySet<WorkflowCollection> _WorkflowCollections;
		
		private EntitySet<WorkflowItem> _WorkflowItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClassTypeChanging(string value);
    partial void OnClassTypeChanged();
    #endregion
		
		public ItemClassType()
		{
			this._WorkflowCollections = new EntitySet<WorkflowCollection>(new Action<WorkflowCollection>(this.attach_WorkflowCollections), new Action<WorkflowCollection>(this.detach_WorkflowCollections));
			this._WorkflowItems = new EntitySet<WorkflowItem>(new Action<WorkflowItem>(this.attach_WorkflowItems), new Action<WorkflowItem>(this.detach_WorkflowItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassType", DbType="VarChar(15)")]
		public string ClassType
		{
			get
			{
				return this._ClassType;
			}
			set
			{
				if ((this._ClassType != value))
				{
					this.OnClassTypeChanging(value);
					this.SendPropertyChanging();
					this._ClassType = value;
					this.SendPropertyChanged("ClassType");
					this.OnClassTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemClassType_WorkflowCollection", Storage="_WorkflowCollections", ThisKey="Id", OtherKey="ItemClassTypeId")]
		public EntitySet<WorkflowCollection> WorkflowCollections
		{
			get
			{
				return this._WorkflowCollections;
			}
			set
			{
				this._WorkflowCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemClassType_WorkflowItem", Storage="_WorkflowItems", ThisKey="Id", OtherKey="ItemClassTypeId")]
		public EntitySet<WorkflowItem> WorkflowItems
		{
			get
			{
				return this._WorkflowItems;
			}
			set
			{
				this._WorkflowItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowCollections(WorkflowCollection entity)
		{
			this.SendPropertyChanging();
			entity.ItemClassType = this;
		}
		
		private void detach_WorkflowCollections(WorkflowCollection entity)
		{
			this.SendPropertyChanging();
			entity.ItemClassType = null;
		}
		
		private void attach_WorkflowItems(WorkflowItem entity)
		{
			this.SendPropertyChanging();
			entity.ItemClassType = this;
		}
		
		private void detach_WorkflowItems(WorkflowItem entity)
		{
			this.SendPropertyChanging();
			entity.ItemClassType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhotoshootWorkflowItem")]
	public partial class PhotoshootWorkflowItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _WorkflowItemId;
		
		private System.Nullable<int> _PhotoShootID;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _CreatedBy;
		
		private string _Assignedto;
		
		private string _Status;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _HasNotes;
		
		private string _CompletedBy;
		
		private System.Nullable<System.DateTime> _CompletedOn;
		
		private System.Nullable<int> _Quantity;
		
		private EntityRef<PhotoShoot> _PhotoShoot;
		
		private EntityRef<WorkflowItem> _WorkflowItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkflowItemIdChanging(System.Nullable<int> value);
    partial void OnWorkflowItemIdChanged();
    partial void OnPhotoShootIDChanging(System.Nullable<int> value);
    partial void OnPhotoShootIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAssignedtoChanging(string value);
    partial void OnAssignedtoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnHasNotesChanging(System.Nullable<bool> value);
    partial void OnHasNotesChanged();
    partial void OnCompletedByChanging(string value);
    partial void OnCompletedByChanged();
    partial void OnCompletedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedOnChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public PhotoshootWorkflowItem()
		{
			this._PhotoShoot = default(EntityRef<PhotoShoot>);
			this._WorkflowItem = default(EntityRef<WorkflowItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowItemId", DbType="Int")]
		public System.Nullable<int> WorkflowItemId
		{
			get
			{
				return this._WorkflowItemId;
			}
			set
			{
				if ((this._WorkflowItemId != value))
				{
					if (this._WorkflowItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowItemIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowItemId = value;
					this.SendPropertyChanged("WorkflowItemId");
					this.OnWorkflowItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoShootID", DbType="Int")]
		public System.Nullable<int> PhotoShootID
		{
			get
			{
				return this._PhotoShootID;
			}
			set
			{
				if ((this._PhotoShootID != value))
				{
					if (this._PhotoShoot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoShootIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoShootID = value;
					this.SendPropertyChanged("PhotoShootID");
					this.OnPhotoShootIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assignedto", DbType="NVarChar(25)")]
		public string Assignedto
		{
			get
			{
				return this._Assignedto;
			}
			set
			{
				if ((this._Assignedto != value))
				{
					this.OnAssignedtoChanging(value);
					this.SendPropertyChanging();
					this._Assignedto = value;
					this.SendPropertyChanged("Assignedto");
					this.OnAssignedtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNotes", DbType="Bit")]
		public System.Nullable<bool> HasNotes
		{
			get
			{
				return this._HasNotes;
			}
			set
			{
				if ((this._HasNotes != value))
				{
					this.OnHasNotesChanging(value);
					this.SendPropertyChanging();
					this._HasNotes = value;
					this.SendPropertyChanged("HasNotes");
					this.OnHasNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedBy", DbType="NVarChar(25)")]
		public string CompletedBy
		{
			get
			{
				return this._CompletedBy;
			}
			set
			{
				if ((this._CompletedBy != value))
				{
					this.OnCompletedByChanging(value);
					this.SendPropertyChanging();
					this._CompletedBy = value;
					this.SendPropertyChanged("CompletedBy");
					this.OnCompletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedOn
		{
			get
			{
				return this._CompletedOn;
			}
			set
			{
				if ((this._CompletedOn != value))
				{
					this.OnCompletedOnChanging(value);
					this.SendPropertyChanging();
					this._CompletedOn = value;
					this.SendPropertyChanged("CompletedOn");
					this.OnCompletedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoShoot_PhotoshootWorkflowItem", Storage="_PhotoShoot", ThisKey="PhotoShootID", OtherKey="PhotoShotID", IsForeignKey=true)]
		public PhotoShoot PhotoShoot
		{
			get
			{
				return this._PhotoShoot.Entity;
			}
			set
			{
				PhotoShoot previousValue = this._PhotoShoot.Entity;
				if (((previousValue != value) 
							|| (this._PhotoShoot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoShoot.Entity = null;
						previousValue.PhotoshootWorkflowItems.Remove(this);
					}
					this._PhotoShoot.Entity = value;
					if ((value != null))
					{
						value.PhotoshootWorkflowItems.Add(this);
						this._PhotoShootID = value.PhotoShotID;
					}
					else
					{
						this._PhotoShootID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhotoShoot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowItem_PhotoshootWorkflowItem", Storage="_WorkflowItem", ThisKey="WorkflowItemId", OtherKey="Id", IsForeignKey=true)]
		public WorkflowItem WorkflowItem
		{
			get
			{
				return this._WorkflowItem.Entity;
			}
			set
			{
				WorkflowItem previousValue = this._WorkflowItem.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowItem.Entity = null;
						previousValue.PhotoshootWorkflowItems.Remove(this);
					}
					this._WorkflowItem.Entity = value;
					if ((value != null))
					{
						value.PhotoshootWorkflowItems.Add(this);
						this._WorkflowItemId = value.Id;
					}
					else
					{
						this._WorkflowItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkflowItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowItem")]
	public partial class WorkflowItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SortOrder;
		
		private string _Description;
		
		private string _Type;
		
		private string _Assignedto;
		
		private string _Status;
		
		private System.Nullable<int> _Offset;
		
		private System.Nullable<bool> _BeforeAfter;
		
		private System.Nullable<int> _ItemClassTypeId;
		
		private string _Notes;
		
		private System.Nullable<int> _Quantity;
		
		private EntitySet<PhotoshootWorkflowItem> _PhotoshootWorkflowItems;
		
		private EntitySet<WorkflowCollectionItem> _WorkflowCollectionItems;
		
		private EntityRef<ItemClassType> _ItemClassType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAssignedtoChanging(string value);
    partial void OnAssignedtoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnOffsetChanging(System.Nullable<int> value);
    partial void OnOffsetChanged();
    partial void OnBeforeAfterChanging(System.Nullable<bool> value);
    partial void OnBeforeAfterChanged();
    partial void OnItemClassTypeIdChanging(System.Nullable<int> value);
    partial void OnItemClassTypeIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public WorkflowItem()
		{
			this._PhotoshootWorkflowItems = new EntitySet<PhotoshootWorkflowItem>(new Action<PhotoshootWorkflowItem>(this.attach_PhotoshootWorkflowItems), new Action<PhotoshootWorkflowItem>(this.detach_PhotoshootWorkflowItems));
			this._WorkflowCollectionItems = new EntitySet<WorkflowCollectionItem>(new Action<WorkflowCollectionItem>(this.attach_WorkflowCollectionItems), new Action<WorkflowCollectionItem>(this.detach_WorkflowCollectionItems));
			this._ItemClassType = default(EntityRef<ItemClassType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(15)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assignedto", DbType="NVarChar(25)")]
		public string Assignedto
		{
			get
			{
				return this._Assignedto;
			}
			set
			{
				if ((this._Assignedto != value))
				{
					this.OnAssignedtoChanging(value);
					this.SendPropertyChanging();
					this._Assignedto = value;
					this.SendPropertyChanged("Assignedto");
					this.OnAssignedtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offset", DbType="Int")]
		public System.Nullable<int> Offset
		{
			get
			{
				return this._Offset;
			}
			set
			{
				if ((this._Offset != value))
				{
					this.OnOffsetChanging(value);
					this.SendPropertyChanging();
					this._Offset = value;
					this.SendPropertyChanged("Offset");
					this.OnOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeAfter", DbType="Bit")]
		public System.Nullable<bool> BeforeAfter
		{
			get
			{
				return this._BeforeAfter;
			}
			set
			{
				if ((this._BeforeAfter != value))
				{
					this.OnBeforeAfterChanging(value);
					this.SendPropertyChanging();
					this._BeforeAfter = value;
					this.SendPropertyChanged("BeforeAfter");
					this.OnBeforeAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemClassTypeId", DbType="Int")]
		public System.Nullable<int> ItemClassTypeId
		{
			get
			{
				return this._ItemClassTypeId;
			}
			set
			{
				if ((this._ItemClassTypeId != value))
				{
					if (this._ItemClassType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemClassTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ItemClassTypeId = value;
					this.SendPropertyChanged("ItemClassTypeId");
					this.OnItemClassTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowItem_PhotoshootWorkflowItem", Storage="_PhotoshootWorkflowItems", ThisKey="Id", OtherKey="WorkflowItemId")]
		public EntitySet<PhotoshootWorkflowItem> PhotoshootWorkflowItems
		{
			get
			{
				return this._PhotoshootWorkflowItems;
			}
			set
			{
				this._PhotoshootWorkflowItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowItem_WorkflowCollectionItem", Storage="_WorkflowCollectionItems", ThisKey="Id", OtherKey="WorkflowItemId")]
		public EntitySet<WorkflowCollectionItem> WorkflowCollectionItems
		{
			get
			{
				return this._WorkflowCollectionItems;
			}
			set
			{
				this._WorkflowCollectionItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemClassType_WorkflowItem", Storage="_ItemClassType", ThisKey="ItemClassTypeId", OtherKey="Id", IsForeignKey=true)]
		public ItemClassType ItemClassType
		{
			get
			{
				return this._ItemClassType.Entity;
			}
			set
			{
				ItemClassType previousValue = this._ItemClassType.Entity;
				if (((previousValue != value) 
							|| (this._ItemClassType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemClassType.Entity = null;
						previousValue.WorkflowItems.Remove(this);
					}
					this._ItemClassType.Entity = value;
					if ((value != null))
					{
						value.WorkflowItems.Add(this);
						this._ItemClassTypeId = value.Id;
					}
					else
					{
						this._ItemClassTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ItemClassType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhotoshootWorkflowItems(PhotoshootWorkflowItem entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowItem = this;
		}
		
		private void detach_PhotoshootWorkflowItems(PhotoshootWorkflowItem entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowItem = null;
		}
		
		private void attach_WorkflowCollectionItems(WorkflowCollectionItem entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowItem = this;
		}
		
		private void detach_WorkflowCollectionItems(WorkflowCollectionItem entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowCollectionItems")]
	public partial class WorkflowCollectionItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _WorkflowItemId;
		
		private System.Nullable<int> _WorkflowCollectionId;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<int> _Quantity;
		
		private EntityRef<WorkflowItem> _WorkflowItem;
		
		private EntityRef<WorkflowCollection> _WorkflowCollection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkflowItemIdChanging(System.Nullable<int> value);
    partial void OnWorkflowItemIdChanged();
    partial void OnWorkflowCollectionIdChanging(System.Nullable<int> value);
    partial void OnWorkflowCollectionIdChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public WorkflowCollectionItem()
		{
			this._WorkflowItem = default(EntityRef<WorkflowItem>);
			this._WorkflowCollection = default(EntityRef<WorkflowCollection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowItemId", DbType="Int")]
		public System.Nullable<int> WorkflowItemId
		{
			get
			{
				return this._WorkflowItemId;
			}
			set
			{
				if ((this._WorkflowItemId != value))
				{
					if (this._WorkflowItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowItemIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowItemId = value;
					this.SendPropertyChanged("WorkflowItemId");
					this.OnWorkflowItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowCollectionId", DbType="Int")]
		public System.Nullable<int> WorkflowCollectionId
		{
			get
			{
				return this._WorkflowCollectionId;
			}
			set
			{
				if ((this._WorkflowCollectionId != value))
				{
					if (this._WorkflowCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowCollectionId = value;
					this.SendPropertyChanged("WorkflowCollectionId");
					this.OnWorkflowCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowItem_WorkflowCollectionItem", Storage="_WorkflowItem", ThisKey="WorkflowItemId", OtherKey="Id", IsForeignKey=true)]
		public WorkflowItem WorkflowItem
		{
			get
			{
				return this._WorkflowItem.Entity;
			}
			set
			{
				WorkflowItem previousValue = this._WorkflowItem.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowItem.Entity = null;
						previousValue.WorkflowCollectionItems.Remove(this);
					}
					this._WorkflowItem.Entity = value;
					if ((value != null))
					{
						value.WorkflowCollectionItems.Add(this);
						this._WorkflowItemId = value.Id;
					}
					else
					{
						this._WorkflowItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkflowItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowCollection_WorkflowCollectionItem", Storage="_WorkflowCollection", ThisKey="WorkflowCollectionId", OtherKey="Id", IsForeignKey=true)]
		public WorkflowCollection WorkflowCollection
		{
			get
			{
				return this._WorkflowCollection.Entity;
			}
			set
			{
				WorkflowCollection previousValue = this._WorkflowCollection.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowCollection.Entity = null;
						previousValue.WorkflowCollectionItems.Remove(this);
					}
					this._WorkflowCollection.Entity = value;
					if ((value != null))
					{
						value.WorkflowCollectionItems.Add(this);
						this._WorkflowCollectionId = value.Id;
					}
					else
					{
						this._WorkflowCollectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkflowCollection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdersImport")]
	public partial class OrdersImport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _OrderType;
		
		private System.Nullable<int> _SchoolID;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnOrderTypeChanging(string value);
    partial void OnOrderTypeChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    #endregion
		
		public OrdersImport()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="VarChar(25)")]
		public string OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdersImport_Order", Storage="_Orders", ThisKey="Id", OtherKey="OrdersImportId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrdersImport = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrdersImport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _StudentImportID;
		
		private string _FirstName;
		
		private string _Lastname;
		
		private string _StudentID;
		
		private string _Password;
		
		private string _Teacher;
		
		private string _Grade;
		
		private string _Custom1;
		
		private string _Custom2;
		
		private string _Custom3;
		
		private string _Custom4;
		
		private string _Custom5;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<bool> _RecordStatus;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _Emailaddress;
		
		private System.Nullable<int> _PhotographyJobID;
		
		private string _IsStudent;
		
		private string _Title;
		
		private string _SchoolCampus;
		
		private string _OfficialFirstName;
		
		private string _OfficialLastName;
		
		private EntitySet<StudentImage> _StudentImages;
		
		private EntityRef<PhotographyJob> _PhotographyJob;
		
		private EntityRef<StudentImport> _StudentImport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentImportIDChanging(System.Nullable<int> value);
    partial void OnStudentImportIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTeacherChanging(string value);
    partial void OnTeacherChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnCustom1Changing(string value);
    partial void OnCustom1Changed();
    partial void OnCustom2Changing(string value);
    partial void OnCustom2Changed();
    partial void OnCustom3Changing(string value);
    partial void OnCustom3Changed();
    partial void OnCustom4Changing(string value);
    partial void OnCustom4Changed();
    partial void OnCustom5Changing(string value);
    partial void OnCustom5Changed();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnRecordStatusChanging(System.Nullable<bool> value);
    partial void OnRecordStatusChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailaddressChanging(string value);
    partial void OnEmailaddressChanged();
    partial void OnPhotographyJobIDChanging(System.Nullable<int> value);
    partial void OnPhotographyJobIDChanged();
    partial void OnIsStudentChanging(string value);
    partial void OnIsStudentChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSchoolCampusChanging(string value);
    partial void OnSchoolCampusChanged();
    partial void OnOfficialFirstNameChanging(string value);
    partial void OnOfficialFirstNameChanged();
    partial void OnOfficialLastNameChanging(string value);
    partial void OnOfficialLastNameChanged();
    #endregion
		
		public Student()
		{
			this._StudentImages = new EntitySet<StudentImage>(new Action<StudentImage>(this.attach_StudentImages), new Action<StudentImage>(this.detach_StudentImages));
			this._PhotographyJob = default(EntityRef<PhotographyJob>);
			this._StudentImport = default(EntityRef<StudentImport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentImportID", DbType="Int")]
		public System.Nullable<int> StudentImportID
		{
			get
			{
				return this._StudentImportID;
			}
			set
			{
				if ((this._StudentImportID != value))
				{
					if (this._StudentImport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentImportIDChanging(value);
					this.SendPropertyChanging();
					this._StudentImportID = value;
					this.SendPropertyChanged("StudentImportID");
					this.OnStudentImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher", DbType="VarChar(50)")]
		public string Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				if ((this._Teacher != value))
				{
					this.OnTeacherChanging(value);
					this.SendPropertyChanging();
					this._Teacher = value;
					this.SendPropertyChanged("Teacher");
					this.OnTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom1", DbType="VarChar(50)")]
		public string Custom1
		{
			get
			{
				return this._Custom1;
			}
			set
			{
				if ((this._Custom1 != value))
				{
					this.OnCustom1Changing(value);
					this.SendPropertyChanging();
					this._Custom1 = value;
					this.SendPropertyChanged("Custom1");
					this.OnCustom1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom2", DbType="VarChar(50)")]
		public string Custom2
		{
			get
			{
				return this._Custom2;
			}
			set
			{
				if ((this._Custom2 != value))
				{
					this.OnCustom2Changing(value);
					this.SendPropertyChanging();
					this._Custom2 = value;
					this.SendPropertyChanged("Custom2");
					this.OnCustom2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom3", DbType="VarChar(50)")]
		public string Custom3
		{
			get
			{
				return this._Custom3;
			}
			set
			{
				if ((this._Custom3 != value))
				{
					this.OnCustom3Changing(value);
					this.SendPropertyChanging();
					this._Custom3 = value;
					this.SendPropertyChanged("Custom3");
					this.OnCustom3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom4", DbType="VarChar(50)")]
		public string Custom4
		{
			get
			{
				return this._Custom4;
			}
			set
			{
				if ((this._Custom4 != value))
				{
					this.OnCustom4Changing(value);
					this.SendPropertyChanging();
					this._Custom4 = value;
					this.SendPropertyChanged("Custom4");
					this.OnCustom4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom5", DbType="VarChar(50)")]
		public string Custom5
		{
			get
			{
				return this._Custom5;
			}
			set
			{
				if ((this._Custom5 != value))
				{
					this.OnCustom5Changing(value);
					this.SendPropertyChanging();
					this._Custom5 = value;
					this.SendPropertyChanged("Custom5");
					this.OnCustom5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordStatus", DbType="Bit")]
		public System.Nullable<bool> RecordStatus
		{
			get
			{
				return this._RecordStatus;
			}
			set
			{
				if ((this._RecordStatus != value))
				{
					this.OnRecordStatusChanging(value);
					this.SendPropertyChanging();
					this._RecordStatus = value;
					this.SendPropertyChanged("RecordStatus");
					this.OnRecordStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emailaddress", DbType="NVarChar(50)")]
		public string Emailaddress
		{
			get
			{
				return this._Emailaddress;
			}
			set
			{
				if ((this._Emailaddress != value))
				{
					this.OnEmailaddressChanging(value);
					this.SendPropertyChanging();
					this._Emailaddress = value;
					this.SendPropertyChanged("Emailaddress");
					this.OnEmailaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotographyJobID", DbType="Int")]
		public System.Nullable<int> PhotographyJobID
		{
			get
			{
				return this._PhotographyJobID;
			}
			set
			{
				if ((this._PhotographyJobID != value))
				{
					if (this._PhotographyJob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotographyJobIDChanging(value);
					this.SendPropertyChanging();
					this._PhotographyJobID = value;
					this.SendPropertyChanged("PhotographyJobID");
					this.OnPhotographyJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStudent", DbType="VarChar(10)")]
		public string IsStudent
		{
			get
			{
				return this._IsStudent;
			}
			set
			{
				if ((this._IsStudent != value))
				{
					this.OnIsStudentChanging(value);
					this.SendPropertyChanging();
					this._IsStudent = value;
					this.SendPropertyChanged("IsStudent");
					this.OnIsStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(10)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCampus", DbType="VarChar(50)")]
		public string SchoolCampus
		{
			get
			{
				return this._SchoolCampus;
			}
			set
			{
				if ((this._SchoolCampus != value))
				{
					this.OnSchoolCampusChanging(value);
					this.SendPropertyChanging();
					this._SchoolCampus = value;
					this.SendPropertyChanged("SchoolCampus");
					this.OnSchoolCampusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficialFirstName", DbType="VarChar(50)")]
		public string OfficialFirstName
		{
			get
			{
				return this._OfficialFirstName;
			}
			set
			{
				if ((this._OfficialFirstName != value))
				{
					this.OnOfficialFirstNameChanging(value);
					this.SendPropertyChanging();
					this._OfficialFirstName = value;
					this.SendPropertyChanged("OfficialFirstName");
					this.OnOfficialFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficialLastName", DbType="VarChar(50)")]
		public string OfficialLastName
		{
			get
			{
				return this._OfficialLastName;
			}
			set
			{
				if ((this._OfficialLastName != value))
				{
					this.OnOfficialLastNameChanging(value);
					this.SendPropertyChanging();
					this._OfficialLastName = value;
					this.SendPropertyChanged("OfficialLastName");
					this.OnOfficialLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentImage", Storage="_StudentImages", ThisKey="ID", OtherKey="StudentIDPK")]
		public EntitySet<StudentImage> StudentImages
		{
			get
			{
				return this._StudentImages;
			}
			set
			{
				this._StudentImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotographyJob_Student", Storage="_PhotographyJob", ThisKey="PhotographyJobID", OtherKey="ID", IsForeignKey=true)]
		public PhotographyJob PhotographyJob
		{
			get
			{
				return this._PhotographyJob.Entity;
			}
			set
			{
				PhotographyJob previousValue = this._PhotographyJob.Entity;
				if (((previousValue != value) 
							|| (this._PhotographyJob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotographyJob.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._PhotographyJob.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._PhotographyJobID = value.ID;
					}
					else
					{
						this._PhotographyJobID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhotographyJob");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImport_Student", Storage="_StudentImport", ThisKey="StudentImportID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StudentImport StudentImport
		{
			get
			{
				return this._StudentImport.Entity;
			}
			set
			{
				StudentImport previousValue = this._StudentImport.Entity;
				if (((previousValue != value) 
							|| (this._StudentImport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentImport.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._StudentImport.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._StudentImportID = value.ID;
					}
					else
					{
						this._StudentImportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentImport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentImages(StudentImage entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentImages(StudentImage entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School")]
	public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SchoolName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Notes;
		
		private string _folderPath;
		
		private System.Nullable<bool> _YearBookRequired;
		
		private System.Nullable<bool> _IDRequired;
		
		private System.Nullable<int> _Students;
		
		private string _Rating;
		
		private System.Nullable<bool> _IsActive;
		
		private string _SchoolYear;
		
		private System.Nullable<int> _StudioId;
		
		private System.Nullable<int> _IDCards;
		
		private System.Nullable<int> _Calendars;
		
		private System.Nullable<int> _Pencils;
		
		private System.Nullable<System.DateTime> _ContractExpiration;
		
		private string _Contact1Name;
		
		private string _Contact1Type;
		
		private string _Contact1Email;
		
		private string _Contact1Notes;
		
		private string _Contact2Name;
		
		private string _Contact2Type;
		
		private string _Contact2Email;
		
		private string _Contact2Notes;
		
		private string _Contact3Name;
		
		private string _Contact3Type;
		
		private string _Contact3Email;
		
		private string _Contact3Notes;
		
		private string _Visit;
		
		private string _Affiliation;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<Package> _Packages;
		
		private EntitySet<PhotographyJob> _PhotographyJobs;
		
		private EntitySet<tblmask> _tblmasks;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<StudentImage> _StudentImages;
		
		private EntitySet<StudentImport> _StudentImports;
		
		private EntitySet<StudentPhotoOrder> _StudentPhotoOrders;
		
		private EntityRef<Studio> _Studio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnfolderPathChanging(string value);
    partial void OnfolderPathChanged();
    partial void OnYearBookRequiredChanging(System.Nullable<bool> value);
    partial void OnYearBookRequiredChanged();
    partial void OnIDRequiredChanging(System.Nullable<bool> value);
    partial void OnIDRequiredChanged();
    partial void OnStudentsChanging(System.Nullable<int> value);
    partial void OnStudentsChanged();
    partial void OnRatingChanging(string value);
    partial void OnRatingChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnSchoolYearChanging(string value);
    partial void OnSchoolYearChanged();
    partial void OnStudioIdChanging(System.Nullable<int> value);
    partial void OnStudioIdChanged();
    partial void OnIDCardsChanging(System.Nullable<int> value);
    partial void OnIDCardsChanged();
    partial void OnCalendarsChanging(System.Nullable<int> value);
    partial void OnCalendarsChanged();
    partial void OnPencilsChanging(System.Nullable<int> value);
    partial void OnPencilsChanged();
    partial void OnContractExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnContractExpirationChanged();
    partial void OnContact1NameChanging(string value);
    partial void OnContact1NameChanged();
    partial void OnContact1TypeChanging(string value);
    partial void OnContact1TypeChanged();
    partial void OnContact1EmailChanging(string value);
    partial void OnContact1EmailChanged();
    partial void OnContact1NotesChanging(string value);
    partial void OnContact1NotesChanged();
    partial void OnContact2NameChanging(string value);
    partial void OnContact2NameChanged();
    partial void OnContact2TypeChanging(string value);
    partial void OnContact2TypeChanged();
    partial void OnContact2EmailChanging(string value);
    partial void OnContact2EmailChanged();
    partial void OnContact2NotesChanging(string value);
    partial void OnContact2NotesChanged();
    partial void OnContact3NameChanging(string value);
    partial void OnContact3NameChanged();
    partial void OnContact3TypeChanging(string value);
    partial void OnContact3TypeChanged();
    partial void OnContact3EmailChanging(string value);
    partial void OnContact3EmailChanged();
    partial void OnContact3NotesChanging(string value);
    partial void OnContact3NotesChanged();
    partial void OnVisitChanging(string value);
    partial void OnVisitChanged();
    partial void OnAffiliationChanging(string value);
    partial void OnAffiliationChanged();
    #endregion
		
		public School()
		{
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._Packages = new EntitySet<Package>(new Action<Package>(this.attach_Packages), new Action<Package>(this.detach_Packages));
			this._PhotographyJobs = new EntitySet<PhotographyJob>(new Action<PhotographyJob>(this.attach_PhotographyJobs), new Action<PhotographyJob>(this.detach_PhotographyJobs));
			this._tblmasks = new EntitySet<tblmask>(new Action<tblmask>(this.attach_tblmasks), new Action<tblmask>(this.detach_tblmasks));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._StudentImages = new EntitySet<StudentImage>(new Action<StudentImage>(this.attach_StudentImages), new Action<StudentImage>(this.detach_StudentImages));
			this._StudentImports = new EntitySet<StudentImport>(new Action<StudentImport>(this.attach_StudentImports), new Action<StudentImport>(this.detach_StudentImports));
			this._StudentPhotoOrders = new EntitySet<StudentPhotoOrder>(new Action<StudentPhotoOrder>(this.attach_StudentPhotoOrders), new Action<StudentPhotoOrder>(this.detach_StudentPhotoOrders));
			this._Studio = default(EntityRef<Studio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(150)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_folderPath", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string folderPath
		{
			get
			{
				return this._folderPath;
			}
			set
			{
				if ((this._folderPath != value))
				{
					this.OnfolderPathChanging(value);
					this.SendPropertyChanging();
					this._folderPath = value;
					this.SendPropertyChanged("folderPath");
					this.OnfolderPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearBookRequired", DbType="Bit")]
		public System.Nullable<bool> YearBookRequired
		{
			get
			{
				return this._YearBookRequired;
			}
			set
			{
				if ((this._YearBookRequired != value))
				{
					this.OnYearBookRequiredChanging(value);
					this.SendPropertyChanging();
					this._YearBookRequired = value;
					this.SendPropertyChanged("YearBookRequired");
					this.OnYearBookRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRequired", DbType="Bit")]
		public System.Nullable<bool> IDRequired
		{
			get
			{
				return this._IDRequired;
			}
			set
			{
				if ((this._IDRequired != value))
				{
					this.OnIDRequiredChanging(value);
					this.SendPropertyChanging();
					this._IDRequired = value;
					this.SendPropertyChanged("IDRequired");
					this.OnIDRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="Int")]
		public System.Nullable<int> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this.OnStudentsChanging(value);
					this.SendPropertyChanging();
					this._Students = value;
					this.SendPropertyChanged("Students");
					this.OnStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="VarChar(10)")]
		public string Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolYear", DbType="VarChar(100)")]
		public string SchoolYear
		{
			get
			{
				return this._SchoolYear;
			}
			set
			{
				if ((this._SchoolYear != value))
				{
					this.OnSchoolYearChanging(value);
					this.SendPropertyChanging();
					this._SchoolYear = value;
					this.SendPropertyChanged("SchoolYear");
					this.OnSchoolYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudioId", DbType="Int")]
		public System.Nullable<int> StudioId
		{
			get
			{
				return this._StudioId;
			}
			set
			{
				if ((this._StudioId != value))
				{
					if (this._Studio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudioIdChanging(value);
					this.SendPropertyChanging();
					this._StudioId = value;
					this.SendPropertyChanged("StudioId");
					this.OnStudioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCards", DbType="Int")]
		public System.Nullable<int> IDCards
		{
			get
			{
				return this._IDCards;
			}
			set
			{
				if ((this._IDCards != value))
				{
					this.OnIDCardsChanging(value);
					this.SendPropertyChanging();
					this._IDCards = value;
					this.SendPropertyChanged("IDCards");
					this.OnIDCardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calendars", DbType="Int")]
		public System.Nullable<int> Calendars
		{
			get
			{
				return this._Calendars;
			}
			set
			{
				if ((this._Calendars != value))
				{
					this.OnCalendarsChanging(value);
					this.SendPropertyChanging();
					this._Calendars = value;
					this.SendPropertyChanged("Calendars");
					this.OnCalendarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pencils", DbType="Int")]
		public System.Nullable<int> Pencils
		{
			get
			{
				return this._Pencils;
			}
			set
			{
				if ((this._Pencils != value))
				{
					this.OnPencilsChanging(value);
					this.SendPropertyChanging();
					this._Pencils = value;
					this.SendPropertyChanged("Pencils");
					this.OnPencilsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractExpiration", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractExpiration
		{
			get
			{
				return this._ContractExpiration;
			}
			set
			{
				if ((this._ContractExpiration != value))
				{
					this.OnContractExpirationChanging(value);
					this.SendPropertyChanging();
					this._ContractExpiration = value;
					this.SendPropertyChanged("ContractExpiration");
					this.OnContractExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact1Name", DbType="NVarChar(30)")]
		public string Contact1Name
		{
			get
			{
				return this._Contact1Name;
			}
			set
			{
				if ((this._Contact1Name != value))
				{
					this.OnContact1NameChanging(value);
					this.SendPropertyChanging();
					this._Contact1Name = value;
					this.SendPropertyChanged("Contact1Name");
					this.OnContact1NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact1Type", DbType="NVarChar(12)")]
		public string Contact1Type
		{
			get
			{
				return this._Contact1Type;
			}
			set
			{
				if ((this._Contact1Type != value))
				{
					this.OnContact1TypeChanging(value);
					this.SendPropertyChanging();
					this._Contact1Type = value;
					this.SendPropertyChanged("Contact1Type");
					this.OnContact1TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact1Email", DbType="NVarChar(50)")]
		public string Contact1Email
		{
			get
			{
				return this._Contact1Email;
			}
			set
			{
				if ((this._Contact1Email != value))
				{
					this.OnContact1EmailChanging(value);
					this.SendPropertyChanging();
					this._Contact1Email = value;
					this.SendPropertyChanged("Contact1Email");
					this.OnContact1EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact1Notes", DbType="VarChar(MAX)")]
		public string Contact1Notes
		{
			get
			{
				return this._Contact1Notes;
			}
			set
			{
				if ((this._Contact1Notes != value))
				{
					this.OnContact1NotesChanging(value);
					this.SendPropertyChanging();
					this._Contact1Notes = value;
					this.SendPropertyChanged("Contact1Notes");
					this.OnContact1NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact2Name", DbType="NVarChar(30)")]
		public string Contact2Name
		{
			get
			{
				return this._Contact2Name;
			}
			set
			{
				if ((this._Contact2Name != value))
				{
					this.OnContact2NameChanging(value);
					this.SendPropertyChanging();
					this._Contact2Name = value;
					this.SendPropertyChanged("Contact2Name");
					this.OnContact2NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact2Type", DbType="NVarChar(12)")]
		public string Contact2Type
		{
			get
			{
				return this._Contact2Type;
			}
			set
			{
				if ((this._Contact2Type != value))
				{
					this.OnContact2TypeChanging(value);
					this.SendPropertyChanging();
					this._Contact2Type = value;
					this.SendPropertyChanged("Contact2Type");
					this.OnContact2TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact2Email", DbType="NVarChar(50)")]
		public string Contact2Email
		{
			get
			{
				return this._Contact2Email;
			}
			set
			{
				if ((this._Contact2Email != value))
				{
					this.OnContact2EmailChanging(value);
					this.SendPropertyChanging();
					this._Contact2Email = value;
					this.SendPropertyChanged("Contact2Email");
					this.OnContact2EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact2Notes", DbType="VarChar(MAX)")]
		public string Contact2Notes
		{
			get
			{
				return this._Contact2Notes;
			}
			set
			{
				if ((this._Contact2Notes != value))
				{
					this.OnContact2NotesChanging(value);
					this.SendPropertyChanging();
					this._Contact2Notes = value;
					this.SendPropertyChanged("Contact2Notes");
					this.OnContact2NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact3Name", DbType="NVarChar(30)")]
		public string Contact3Name
		{
			get
			{
				return this._Contact3Name;
			}
			set
			{
				if ((this._Contact3Name != value))
				{
					this.OnContact3NameChanging(value);
					this.SendPropertyChanging();
					this._Contact3Name = value;
					this.SendPropertyChanged("Contact3Name");
					this.OnContact3NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact3Type", DbType="NVarChar(12)")]
		public string Contact3Type
		{
			get
			{
				return this._Contact3Type;
			}
			set
			{
				if ((this._Contact3Type != value))
				{
					this.OnContact3TypeChanging(value);
					this.SendPropertyChanging();
					this._Contact3Type = value;
					this.SendPropertyChanged("Contact3Type");
					this.OnContact3TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact3Email", DbType="NVarChar(50)")]
		public string Contact3Email
		{
			get
			{
				return this._Contact3Email;
			}
			set
			{
				if ((this._Contact3Email != value))
				{
					this.OnContact3EmailChanging(value);
					this.SendPropertyChanging();
					this._Contact3Email = value;
					this.SendPropertyChanged("Contact3Email");
					this.OnContact3EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact3Notes", DbType="VarChar(MAX)")]
		public string Contact3Notes
		{
			get
			{
				return this._Contact3Notes;
			}
			set
			{
				if ((this._Contact3Notes != value))
				{
					this.OnContact3NotesChanging(value);
					this.SendPropertyChanging();
					this._Contact3Notes = value;
					this.SendPropertyChanged("Contact3Notes");
					this.OnContact3NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visit", DbType="VarChar(50)")]
		public string Visit
		{
			get
			{
				return this._Visit;
			}
			set
			{
				if ((this._Visit != value))
				{
					this.OnVisitChanging(value);
					this.SendPropertyChanging();
					this._Visit = value;
					this.SendPropertyChanged("Visit");
					this.OnVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliation", DbType="VarChar(100)")]
		public string Affiliation
		{
			get
			{
				return this._Affiliation;
			}
			set
			{
				if ((this._Affiliation != value))
				{
					this.OnAffiliationChanging(value);
					this.SendPropertyChanging();
					this._Affiliation = value;
					this.SendPropertyChanged("Affiliation");
					this.OnAffiliationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Group", Storage="_Groups", ThisKey="ID", OtherKey="SchoolID")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Package", Storage="_Packages", ThisKey="ID", OtherKey="schoolId")]
		public EntitySet<Package> Packages
		{
			get
			{
				return this._Packages;
			}
			set
			{
				this._Packages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_PhotographyJob", Storage="_PhotographyJobs", ThisKey="ID", OtherKey="SchoolID")]
		public EntitySet<PhotographyJob> PhotographyJobs
		{
			get
			{
				return this._PhotographyJobs;
			}
			set
			{
				this._PhotographyJobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_tblmask", Storage="_tblmasks", ThisKey="ID", OtherKey="schoolid")]
		public EntitySet<tblmask> tblmasks
		{
			get
			{
				return this._tblmasks;
			}
			set
			{
				this._tblmasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Activity", Storage="_Activities", ThisKey="ID", OtherKey="SchoolId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentImage", Storage="_StudentImages", ThisKey="ID", OtherKey="SchoolID")]
		public EntitySet<StudentImage> StudentImages
		{
			get
			{
				return this._StudentImages;
			}
			set
			{
				this._StudentImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentImport", Storage="_StudentImports", ThisKey="ID", OtherKey="SchoolID")]
		public EntitySet<StudentImport> StudentImports
		{
			get
			{
				return this._StudentImports;
			}
			set
			{
				this._StudentImports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentPhotoOrder", Storage="_StudentPhotoOrders", ThisKey="ID", OtherKey="SchoolId")]
		public EntitySet<StudentPhotoOrder> StudentPhotoOrders
		{
			get
			{
				return this._StudentPhotoOrders;
			}
			set
			{
				this._StudentPhotoOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studio_School", Storage="_Studio", ThisKey="StudioId", OtherKey="Id", IsForeignKey=true)]
		public Studio Studio
		{
			get
			{
				return this._Studio.Entity;
			}
			set
			{
				Studio previousValue = this._Studio.Entity;
				if (((previousValue != value) 
							|| (this._Studio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Studio.Entity = null;
						previousValue.Schools.Remove(this);
					}
					this._Studio.Entity = value;
					if ((value != null))
					{
						value.Schools.Add(this);
						this._StudioId = value.Id;
					}
					else
					{
						this._StudioId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Studio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_Packages(Package entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_Packages(Package entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_PhotographyJobs(PhotographyJob entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_PhotographyJobs(PhotographyJob entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_tblmasks(tblmask entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_tblmasks(tblmask entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentImages(StudentImage entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentImages(StudentImage entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentImports(StudentImport entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentImports(StudentImport entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void attach_StudentPhotoOrders(StudentPhotoOrder entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_StudentPhotoOrders(StudentPhotoOrder entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<bool> _Fulfilled;
		
		private string _VendorOrderNo;
		
		private System.Nullable<System.DateTime> _VendorDate;
		
		private System.Nullable<int> _SimplePhotoOrderID;
		
		private System.Nullable<decimal> _OrderTotal;
		
		private System.Nullable<decimal> _ShippingCost;
		
		private string _Cust_FirstName;
		
		private string _Cust_LastName;
		
		private string _Cust_Address;
		
		private string _Cust_City;
		
		private string _Cust_State;
		
		private string _Cust_PostalCode;
		
		private string _Cust_Country;
		
		private string _Cust_Email;
		
		private string _Cust_Phone;
		
		private string _Ship_FirstName;
		
		private string _Ship_LastName;
		
		private string _XMLOrder;
		
		private string _OrdersLog;
		
		private string _Ship_Address;
		
		private string _Ship_City;
		
		private string _Ship_State;
		
		private string _Ship_PostalCode;
		
		private string _Ship_Country;
		
		private string _Ship_Phone;
		
		private string _Ship_UseBillToShip;
		
		private System.Nullable<System.DateTime> _OrderedFromVendor;
		
		private System.Nullable<System.DateTime> _ExportDate;
		
		private string _ExportFolder;
		
		private string _ExportedBy;
		
		private System.Nullable<bool> _IsExported;
		
		private System.Nullable<bool> _isSimplePhotoBillingCodeFilled;
		
		private string _Platform;
		
		private string _OrderType;
		
		private string _Title;
		
		private string _Description;
		
		private string _ProductCode;
		
		private System.Nullable<bool> _HasMissingImages;
		
		private System.Nullable<bool> _Retouch;
		
		private string _ImportedBy;
		
		private System.Nullable<int> _OrdersImportId;
		
		private string _PaymentMethod;
		
		private System.Nullable<bool> _HasNotes;
		
		private System.Nullable<int> _FPOrderId;
		
		private System.Nullable<decimal> _Variance;
		
		private string _TrackingNumber;
		
		private System.Nullable<bool> _isShipped;
		
		private string _Studio;
		
		private System.Nullable<bool> _IsStandardRetouch;
		
		private string _GotPhotoOrderKey;
		
		private EntitySet<StudentPhotoOrder> _StudentPhotoOrders;
		
		private EntityRef<OrdersImport> _OrdersImport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnFulfilledChanging(System.Nullable<bool> value);
    partial void OnFulfilledChanged();
    partial void OnVendorOrderNoChanging(string value);
    partial void OnVendorOrderNoChanged();
    partial void OnVendorDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVendorDateChanged();
    partial void OnSimplePhotoOrderIDChanging(System.Nullable<int> value);
    partial void OnSimplePhotoOrderIDChanged();
    partial void OnOrderTotalChanging(System.Nullable<decimal> value);
    partial void OnOrderTotalChanged();
    partial void OnShippingCostChanging(System.Nullable<decimal> value);
    partial void OnShippingCostChanged();
    partial void OnCust_FirstNameChanging(string value);
    partial void OnCust_FirstNameChanged();
    partial void OnCust_LastNameChanging(string value);
    partial void OnCust_LastNameChanged();
    partial void OnCust_AddressChanging(string value);
    partial void OnCust_AddressChanged();
    partial void OnCust_CityChanging(string value);
    partial void OnCust_CityChanged();
    partial void OnCust_StateChanging(string value);
    partial void OnCust_StateChanged();
    partial void OnCust_PostalCodeChanging(string value);
    partial void OnCust_PostalCodeChanged();
    partial void OnCust_CountryChanging(string value);
    partial void OnCust_CountryChanged();
    partial void OnCust_EmailChanging(string value);
    partial void OnCust_EmailChanged();
    partial void OnCust_PhoneChanging(string value);
    partial void OnCust_PhoneChanged();
    partial void OnShip_FirstNameChanging(string value);
    partial void OnShip_FirstNameChanged();
    partial void OnShip_LastNameChanging(string value);
    partial void OnShip_LastNameChanged();
    partial void OnXMLOrderChanging(string value);
    partial void OnXMLOrderChanged();
    partial void OnOrdersLogChanging(string value);
    partial void OnOrdersLogChanged();
    partial void OnShip_AddressChanging(string value);
    partial void OnShip_AddressChanged();
    partial void OnShip_CityChanging(string value);
    partial void OnShip_CityChanged();
    partial void OnShip_StateChanging(string value);
    partial void OnShip_StateChanged();
    partial void OnShip_PostalCodeChanging(string value);
    partial void OnShip_PostalCodeChanged();
    partial void OnShip_CountryChanging(string value);
    partial void OnShip_CountryChanged();
    partial void OnShip_PhoneChanging(string value);
    partial void OnShip_PhoneChanged();
    partial void OnShip_UseBillToShipChanging(string value);
    partial void OnShip_UseBillToShipChanged();
    partial void OnOrderedFromVendorChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderedFromVendorChanged();
    partial void OnExportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExportDateChanged();
    partial void OnExportFolderChanging(string value);
    partial void OnExportFolderChanged();
    partial void OnExportedByChanging(string value);
    partial void OnExportedByChanged();
    partial void OnIsExportedChanging(System.Nullable<bool> value);
    partial void OnIsExportedChanged();
    partial void OnisSimplePhotoBillingCodeFilledChanging(System.Nullable<bool> value);
    partial void OnisSimplePhotoBillingCodeFilledChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnOrderTypeChanging(string value);
    partial void OnOrderTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnHasMissingImagesChanging(System.Nullable<bool> value);
    partial void OnHasMissingImagesChanged();
    partial void OnRetouchChanging(System.Nullable<bool> value);
    partial void OnRetouchChanged();
    partial void OnImportedByChanging(string value);
    partial void OnImportedByChanged();
    partial void OnOrdersImportIdChanging(System.Nullable<int> value);
    partial void OnOrdersImportIdChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnHasNotesChanging(System.Nullable<bool> value);
    partial void OnHasNotesChanged();
    partial void OnFPOrderIdChanging(System.Nullable<int> value);
    partial void OnFPOrderIdChanged();
    partial void OnVarianceChanging(System.Nullable<decimal> value);
    partial void OnVarianceChanged();
    partial void OnTrackingNumberChanging(string value);
    partial void OnTrackingNumberChanged();
    partial void OnisShippedChanging(System.Nullable<bool> value);
    partial void OnisShippedChanged();
    partial void OnStudioChanging(string value);
    partial void OnStudioChanged();
    partial void OnIsStandardRetouchChanging(System.Nullable<bool> value);
    partial void OnIsStandardRetouchChanged();
    partial void OnGotPhotoOrderKeyChanging(string value);
    partial void OnGotPhotoOrderKeyChanged();
    #endregion
		
		public Order()
		{
			this._StudentPhotoOrders = new EntitySet<StudentPhotoOrder>(new Action<StudentPhotoOrder>(this.attach_StudentPhotoOrders), new Action<StudentPhotoOrder>(this.detach_StudentPhotoOrders));
			this._OrdersImport = default(EntityRef<OrdersImport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fulfilled", DbType="Bit")]
		public System.Nullable<bool> Fulfilled
		{
			get
			{
				return this._Fulfilled;
			}
			set
			{
				if ((this._Fulfilled != value))
				{
					this.OnFulfilledChanging(value);
					this.SendPropertyChanging();
					this._Fulfilled = value;
					this.SendPropertyChanged("Fulfilled");
					this.OnFulfilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorOrderNo", DbType="VarChar(50)")]
		public string VendorOrderNo
		{
			get
			{
				return this._VendorOrderNo;
			}
			set
			{
				if ((this._VendorOrderNo != value))
				{
					this.OnVendorOrderNoChanging(value);
					this.SendPropertyChanging();
					this._VendorOrderNo = value;
					this.SendPropertyChanged("VendorOrderNo");
					this.OnVendorOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VendorDate
		{
			get
			{
				return this._VendorDate;
			}
			set
			{
				if ((this._VendorDate != value))
				{
					this.OnVendorDateChanging(value);
					this.SendPropertyChanging();
					this._VendorDate = value;
					this.SendPropertyChanged("VendorDate");
					this.OnVendorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplePhotoOrderID", DbType="Int")]
		public System.Nullable<int> SimplePhotoOrderID
		{
			get
			{
				return this._SimplePhotoOrderID;
			}
			set
			{
				if ((this._SimplePhotoOrderID != value))
				{
					this.OnSimplePhotoOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SimplePhotoOrderID = value;
					this.SendPropertyChanged("SimplePhotoOrderID");
					this.OnSimplePhotoOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTotal", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> OrderTotal
		{
			get
			{
				return this._OrderTotal;
			}
			set
			{
				if ((this._OrderTotal != value))
				{
					this.OnOrderTotalChanging(value);
					this.SendPropertyChanging();
					this._OrderTotal = value;
					this.SendPropertyChanged("OrderTotal");
					this.OnOrderTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ShippingCost
		{
			get
			{
				return this._ShippingCost;
			}
			set
			{
				if ((this._ShippingCost != value))
				{
					this.OnShippingCostChanging(value);
					this.SendPropertyChanging();
					this._ShippingCost = value;
					this.SendPropertyChanged("ShippingCost");
					this.OnShippingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_FirstName", DbType="VarChar(50)")]
		public string Cust_FirstName
		{
			get
			{
				return this._Cust_FirstName;
			}
			set
			{
				if ((this._Cust_FirstName != value))
				{
					this.OnCust_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Cust_FirstName = value;
					this.SendPropertyChanged("Cust_FirstName");
					this.OnCust_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_LastName", DbType="VarChar(50)")]
		public string Cust_LastName
		{
			get
			{
				return this._Cust_LastName;
			}
			set
			{
				if ((this._Cust_LastName != value))
				{
					this.OnCust_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Cust_LastName = value;
					this.SendPropertyChanged("Cust_LastName");
					this.OnCust_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Address", DbType="VarChar(150)")]
		public string Cust_Address
		{
			get
			{
				return this._Cust_Address;
			}
			set
			{
				if ((this._Cust_Address != value))
				{
					this.OnCust_AddressChanging(value);
					this.SendPropertyChanging();
					this._Cust_Address = value;
					this.SendPropertyChanged("Cust_Address");
					this.OnCust_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_City", DbType="VarChar(25)")]
		public string Cust_City
		{
			get
			{
				return this._Cust_City;
			}
			set
			{
				if ((this._Cust_City != value))
				{
					this.OnCust_CityChanging(value);
					this.SendPropertyChanging();
					this._Cust_City = value;
					this.SendPropertyChanged("Cust_City");
					this.OnCust_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_State", DbType="VarChar(20)")]
		public string Cust_State
		{
			get
			{
				return this._Cust_State;
			}
			set
			{
				if ((this._Cust_State != value))
				{
					this.OnCust_StateChanging(value);
					this.SendPropertyChanging();
					this._Cust_State = value;
					this.SendPropertyChanged("Cust_State");
					this.OnCust_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_PostalCode", DbType="VarChar(30)")]
		public string Cust_PostalCode
		{
			get
			{
				return this._Cust_PostalCode;
			}
			set
			{
				if ((this._Cust_PostalCode != value))
				{
					this.OnCust_PostalCodeChanging(value);
					this.SendPropertyChanging();
					this._Cust_PostalCode = value;
					this.SendPropertyChanged("Cust_PostalCode");
					this.OnCust_PostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Country", DbType="VarChar(50)")]
		public string Cust_Country
		{
			get
			{
				return this._Cust_Country;
			}
			set
			{
				if ((this._Cust_Country != value))
				{
					this.OnCust_CountryChanging(value);
					this.SendPropertyChanging();
					this._Cust_Country = value;
					this.SendPropertyChanged("Cust_Country");
					this.OnCust_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Email", DbType="VarChar(50)")]
		public string Cust_Email
		{
			get
			{
				return this._Cust_Email;
			}
			set
			{
				if ((this._Cust_Email != value))
				{
					this.OnCust_EmailChanging(value);
					this.SendPropertyChanging();
					this._Cust_Email = value;
					this.SendPropertyChanged("Cust_Email");
					this.OnCust_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Phone", DbType="VarChar(15)")]
		public string Cust_Phone
		{
			get
			{
				return this._Cust_Phone;
			}
			set
			{
				if ((this._Cust_Phone != value))
				{
					this.OnCust_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Cust_Phone = value;
					this.SendPropertyChanged("Cust_Phone");
					this.OnCust_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_FirstName", DbType="VarChar(50)")]
		public string Ship_FirstName
		{
			get
			{
				return this._Ship_FirstName;
			}
			set
			{
				if ((this._Ship_FirstName != value))
				{
					this.OnShip_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Ship_FirstName = value;
					this.SendPropertyChanged("Ship_FirstName");
					this.OnShip_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_LastName", DbType="VarChar(50)")]
		public string Ship_LastName
		{
			get
			{
				return this._Ship_LastName;
			}
			set
			{
				if ((this._Ship_LastName != value))
				{
					this.OnShip_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Ship_LastName = value;
					this.SendPropertyChanged("Ship_LastName");
					this.OnShip_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMLOrder", DbType="VarChar(MAX)")]
		public string XMLOrder
		{
			get
			{
				return this._XMLOrder;
			}
			set
			{
				if ((this._XMLOrder != value))
				{
					this.OnXMLOrderChanging(value);
					this.SendPropertyChanging();
					this._XMLOrder = value;
					this.SendPropertyChanged("XMLOrder");
					this.OnXMLOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersLog", DbType="VarChar(MAX)")]
		public string OrdersLog
		{
			get
			{
				return this._OrdersLog;
			}
			set
			{
				if ((this._OrdersLog != value))
				{
					this.OnOrdersLogChanging(value);
					this.SendPropertyChanging();
					this._OrdersLog = value;
					this.SendPropertyChanged("OrdersLog");
					this.OnOrdersLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Address", DbType="VarChar(150)")]
		public string Ship_Address
		{
			get
			{
				return this._Ship_Address;
			}
			set
			{
				if ((this._Ship_Address != value))
				{
					this.OnShip_AddressChanging(value);
					this.SendPropertyChanging();
					this._Ship_Address = value;
					this.SendPropertyChanged("Ship_Address");
					this.OnShip_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_City", DbType="VarChar(25)")]
		public string Ship_City
		{
			get
			{
				return this._Ship_City;
			}
			set
			{
				if ((this._Ship_City != value))
				{
					this.OnShip_CityChanging(value);
					this.SendPropertyChanging();
					this._Ship_City = value;
					this.SendPropertyChanged("Ship_City");
					this.OnShip_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_State", DbType="VarChar(20)")]
		public string Ship_State
		{
			get
			{
				return this._Ship_State;
			}
			set
			{
				if ((this._Ship_State != value))
				{
					this.OnShip_StateChanging(value);
					this.SendPropertyChanging();
					this._Ship_State = value;
					this.SendPropertyChanged("Ship_State");
					this.OnShip_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_PostalCode", DbType="VarChar(30)")]
		public string Ship_PostalCode
		{
			get
			{
				return this._Ship_PostalCode;
			}
			set
			{
				if ((this._Ship_PostalCode != value))
				{
					this.OnShip_PostalCodeChanging(value);
					this.SendPropertyChanging();
					this._Ship_PostalCode = value;
					this.SendPropertyChanged("Ship_PostalCode");
					this.OnShip_PostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Country", DbType="VarChar(50)")]
		public string Ship_Country
		{
			get
			{
				return this._Ship_Country;
			}
			set
			{
				if ((this._Ship_Country != value))
				{
					this.OnShip_CountryChanging(value);
					this.SendPropertyChanging();
					this._Ship_Country = value;
					this.SendPropertyChanged("Ship_Country");
					this.OnShip_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Phone", DbType="VarChar(20)")]
		public string Ship_Phone
		{
			get
			{
				return this._Ship_Phone;
			}
			set
			{
				if ((this._Ship_Phone != value))
				{
					this.OnShip_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Ship_Phone = value;
					this.SendPropertyChanged("Ship_Phone");
					this.OnShip_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_UseBillToShip", DbType="VarChar(5)")]
		public string Ship_UseBillToShip
		{
			get
			{
				return this._Ship_UseBillToShip;
			}
			set
			{
				if ((this._Ship_UseBillToShip != value))
				{
					this.OnShip_UseBillToShipChanging(value);
					this.SendPropertyChanging();
					this._Ship_UseBillToShip = value;
					this.SendPropertyChanged("Ship_UseBillToShip");
					this.OnShip_UseBillToShipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderedFromVendor", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderedFromVendor
		{
			get
			{
				return this._OrderedFromVendor;
			}
			set
			{
				if ((this._OrderedFromVendor != value))
				{
					this.OnOrderedFromVendorChanging(value);
					this.SendPropertyChanging();
					this._OrderedFromVendor = value;
					this.SendPropertyChanged("OrderedFromVendor");
					this.OnOrderedFromVendorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExportDate
		{
			get
			{
				return this._ExportDate;
			}
			set
			{
				if ((this._ExportDate != value))
				{
					this.OnExportDateChanging(value);
					this.SendPropertyChanging();
					this._ExportDate = value;
					this.SendPropertyChanged("ExportDate");
					this.OnExportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportFolder", DbType="VarChar(150)")]
		public string ExportFolder
		{
			get
			{
				return this._ExportFolder;
			}
			set
			{
				if ((this._ExportFolder != value))
				{
					this.OnExportFolderChanging(value);
					this.SendPropertyChanging();
					this._ExportFolder = value;
					this.SendPropertyChanged("ExportFolder");
					this.OnExportFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedBy", DbType="VarChar(20)")]
		public string ExportedBy
		{
			get
			{
				return this._ExportedBy;
			}
			set
			{
				if ((this._ExportedBy != value))
				{
					this.OnExportedByChanging(value);
					this.SendPropertyChanging();
					this._ExportedBy = value;
					this.SendPropertyChanged("ExportedBy");
					this.OnExportedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExported", DbType="Bit")]
		public System.Nullable<bool> IsExported
		{
			get
			{
				return this._IsExported;
			}
			set
			{
				if ((this._IsExported != value))
				{
					this.OnIsExportedChanging(value);
					this.SendPropertyChanging();
					this._IsExported = value;
					this.SendPropertyChanged("IsExported");
					this.OnIsExportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSimplePhotoBillingCodeFilled", DbType="Bit")]
		public System.Nullable<bool> isSimplePhotoBillingCodeFilled
		{
			get
			{
				return this._isSimplePhotoBillingCodeFilled;
			}
			set
			{
				if ((this._isSimplePhotoBillingCodeFilled != value))
				{
					this.OnisSimplePhotoBillingCodeFilledChanging(value);
					this.SendPropertyChanging();
					this._isSimplePhotoBillingCodeFilled = value;
					this.SendPropertyChanged("isSimplePhotoBillingCodeFilled");
					this.OnisSimplePhotoBillingCodeFilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(50)")]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="VarChar(50)")]
		public string OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="VarChar(50)")]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMissingImages", DbType="Bit")]
		public System.Nullable<bool> HasMissingImages
		{
			get
			{
				return this._HasMissingImages;
			}
			set
			{
				if ((this._HasMissingImages != value))
				{
					this.OnHasMissingImagesChanging(value);
					this.SendPropertyChanging();
					this._HasMissingImages = value;
					this.SendPropertyChanged("HasMissingImages");
					this.OnHasMissingImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Retouch", DbType="Bit")]
		public System.Nullable<bool> Retouch
		{
			get
			{
				return this._Retouch;
			}
			set
			{
				if ((this._Retouch != value))
				{
					this.OnRetouchChanging(value);
					this.SendPropertyChanging();
					this._Retouch = value;
					this.SendPropertyChanged("Retouch");
					this.OnRetouchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedBy", DbType="VarChar(20)")]
		public string ImportedBy
		{
			get
			{
				return this._ImportedBy;
			}
			set
			{
				if ((this._ImportedBy != value))
				{
					this.OnImportedByChanging(value);
					this.SendPropertyChanging();
					this._ImportedBy = value;
					this.SendPropertyChanged("ImportedBy");
					this.OnImportedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersImportId", DbType="Int")]
		public System.Nullable<int> OrdersImportId
		{
			get
			{
				return this._OrdersImportId;
			}
			set
			{
				if ((this._OrdersImportId != value))
				{
					if (this._OrdersImport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdersImportIdChanging(value);
					this.SendPropertyChanging();
					this._OrdersImportId = value;
					this.SendPropertyChanged("OrdersImportId");
					this.OnOrdersImportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="VarChar(50)")]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNotes", DbType="Bit")]
		public System.Nullable<bool> HasNotes
		{
			get
			{
				return this._HasNotes;
			}
			set
			{
				if ((this._HasNotes != value))
				{
					this.OnHasNotesChanging(value);
					this.SendPropertyChanging();
					this._HasNotes = value;
					this.SendPropertyChanged("HasNotes");
					this.OnHasNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPOrderId", DbType="Int")]
		public System.Nullable<int> FPOrderId
		{
			get
			{
				return this._FPOrderId;
			}
			set
			{
				if ((this._FPOrderId != value))
				{
					this.OnFPOrderIdChanging(value);
					this.SendPropertyChanging();
					this._FPOrderId = value;
					this.SendPropertyChanged("FPOrderId");
					this.OnFPOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variance", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Variance
		{
			get
			{
				return this._Variance;
			}
			set
			{
				if ((this._Variance != value))
				{
					this.OnVarianceChanging(value);
					this.SendPropertyChanging();
					this._Variance = value;
					this.SendPropertyChanged("Variance");
					this.OnVarianceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumber", DbType="VarChar(50)")]
		public string TrackingNumber
		{
			get
			{
				return this._TrackingNumber;
			}
			set
			{
				if ((this._TrackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isShipped", DbType="Bit")]
		public System.Nullable<bool> isShipped
		{
			get
			{
				return this._isShipped;
			}
			set
			{
				if ((this._isShipped != value))
				{
					this.OnisShippedChanging(value);
					this.SendPropertyChanging();
					this._isShipped = value;
					this.SendPropertyChanged("isShipped");
					this.OnisShippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Studio", DbType="VarChar(20)")]
		public string Studio
		{
			get
			{
				return this._Studio;
			}
			set
			{
				if ((this._Studio != value))
				{
					this.OnStudioChanging(value);
					this.SendPropertyChanging();
					this._Studio = value;
					this.SendPropertyChanged("Studio");
					this.OnStudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStandardRetouch", DbType="Bit")]
		public System.Nullable<bool> IsStandardRetouch
		{
			get
			{
				return this._IsStandardRetouch;
			}
			set
			{
				if ((this._IsStandardRetouch != value))
				{
					this.OnIsStandardRetouchChanging(value);
					this.SendPropertyChanging();
					this._IsStandardRetouch = value;
					this.SendPropertyChanged("IsStandardRetouch");
					this.OnIsStandardRetouchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GotPhotoOrderKey", DbType="VarChar(50)")]
		public string GotPhotoOrderKey
		{
			get
			{
				return this._GotPhotoOrderKey;
			}
			set
			{
				if ((this._GotPhotoOrderKey != value))
				{
					this.OnGotPhotoOrderKeyChanging(value);
					this.SendPropertyChanging();
					this._GotPhotoOrderKey = value;
					this.SendPropertyChanged("GotPhotoOrderKey");
					this.OnGotPhotoOrderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_StudentPhotoOrder", Storage="_StudentPhotoOrders", ThisKey="Id", OtherKey="OrderId")]
		public EntitySet<StudentPhotoOrder> StudentPhotoOrders
		{
			get
			{
				return this._StudentPhotoOrders;
			}
			set
			{
				this._StudentPhotoOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdersImport_Order", Storage="_OrdersImport", ThisKey="OrdersImportId", OtherKey="Id", IsForeignKey=true)]
		public OrdersImport OrdersImport
		{
			get
			{
				return this._OrdersImport.Entity;
			}
			set
			{
				OrdersImport previousValue = this._OrdersImport.Entity;
				if (((previousValue != value) 
							|| (this._OrdersImport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrdersImport.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._OrdersImport.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._OrdersImportId = value.Id;
					}
					else
					{
						this._OrdersImportId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrdersImport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentPhotoOrders(StudentPhotoOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_StudentPhotoOrders(StudentPhotoOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentPhotoOrder")]
	public partial class StudentPhotoOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StudentImageId;
		
		private System.Nullable<int> _OrderId;
		
		private System.Nullable<int> _SchoolId;
		
		private System.Nullable<int> _GroupImageId;
		
		private string _sp_SimplePhotoBillingCode;
		
		private string _sp_ItemDescription;
		
		private string _sp_GroupName;
		
		private string _sp_Name;
		
		private string _sp_Password;
		
		private string _sp_PriceListName;
		
		private string _VenueName;
		
		private System.Nullable<decimal> _LabCost;
		
		private string _sp_ProductType;
		
		private string _sp_JobNumber;
		
		private string _Comments;
		
		private System.Nullable<int> _Quantity;
		
		private string _crop_coordinates;
		
		private string _crop_dimensions;
		
		private string _crop_orientation;
		
		private string _gp_FileName;
		
		private string _gp_FileName2;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<School> _School;
		
		private EntityRef<StudentImage> _StudentImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudentImageIdChanging(System.Nullable<int> value);
    partial void OnStudentImageIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnSchoolIdChanging(System.Nullable<int> value);
    partial void OnSchoolIdChanged();
    partial void OnGroupImageIdChanging(System.Nullable<int> value);
    partial void OnGroupImageIdChanged();
    partial void Onsp_SimplePhotoBillingCodeChanging(string value);
    partial void Onsp_SimplePhotoBillingCodeChanged();
    partial void Onsp_ItemDescriptionChanging(string value);
    partial void Onsp_ItemDescriptionChanged();
    partial void Onsp_GroupNameChanging(string value);
    partial void Onsp_GroupNameChanged();
    partial void Onsp_NameChanging(string value);
    partial void Onsp_NameChanged();
    partial void Onsp_PasswordChanging(string value);
    partial void Onsp_PasswordChanged();
    partial void Onsp_PriceListNameChanging(string value);
    partial void Onsp_PriceListNameChanged();
    partial void OnVenueNameChanging(string value);
    partial void OnVenueNameChanged();
    partial void OnLabCostChanging(System.Nullable<decimal> value);
    partial void OnLabCostChanged();
    partial void Onsp_ProductTypeChanging(string value);
    partial void Onsp_ProductTypeChanged();
    partial void Onsp_JobNumberChanging(string value);
    partial void Onsp_JobNumberChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void Oncrop_coordinatesChanging(string value);
    partial void Oncrop_coordinatesChanged();
    partial void Oncrop_dimensionsChanging(string value);
    partial void Oncrop_dimensionsChanged();
    partial void Oncrop_orientationChanging(string value);
    partial void Oncrop_orientationChanged();
    partial void Ongp_FileNameChanging(string value);
    partial void Ongp_FileNameChanged();
    partial void Ongp_FileName2Changing(string value);
    partial void Ongp_FileName2Changed();
    #endregion
		
		public StudentPhotoOrder()
		{
			this._Order = default(EntityRef<Order>);
			this._School = default(EntityRef<School>);
			this._StudentImage = default(EntityRef<StudentImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentImageId", DbType="Int")]
		public System.Nullable<int> StudentImageId
		{
			get
			{
				return this._StudentImageId;
			}
			set
			{
				if ((this._StudentImageId != value))
				{
					if (this._StudentImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentImageIdChanging(value);
					this.SendPropertyChanging();
					this._StudentImageId = value;
					this.SendPropertyChanged("StudentImageId");
					this.OnStudentImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="Int")]
		public System.Nullable<int> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupImageId", DbType="Int")]
		public System.Nullable<int> GroupImageId
		{
			get
			{
				return this._GroupImageId;
			}
			set
			{
				if ((this._GroupImageId != value))
				{
					this.OnGroupImageIdChanging(value);
					this.SendPropertyChanging();
					this._GroupImageId = value;
					this.SendPropertyChanged("GroupImageId");
					this.OnGroupImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_SimplePhotoBillingCode", DbType="VarChar(10)")]
		public string sp_SimplePhotoBillingCode
		{
			get
			{
				return this._sp_SimplePhotoBillingCode;
			}
			set
			{
				if ((this._sp_SimplePhotoBillingCode != value))
				{
					this.Onsp_SimplePhotoBillingCodeChanging(value);
					this.SendPropertyChanging();
					this._sp_SimplePhotoBillingCode = value;
					this.SendPropertyChanged("sp_SimplePhotoBillingCode");
					this.Onsp_SimplePhotoBillingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_ItemDescription", DbType="NVarChar(250)")]
		public string sp_ItemDescription
		{
			get
			{
				return this._sp_ItemDescription;
			}
			set
			{
				if ((this._sp_ItemDescription != value))
				{
					this.Onsp_ItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sp_ItemDescription = value;
					this.SendPropertyChanged("sp_ItemDescription");
					this.Onsp_ItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_GroupName", DbType="VarChar(100)")]
		public string sp_GroupName
		{
			get
			{
				return this._sp_GroupName;
			}
			set
			{
				if ((this._sp_GroupName != value))
				{
					this.Onsp_GroupNameChanging(value);
					this.SendPropertyChanging();
					this._sp_GroupName = value;
					this.SendPropertyChanged("sp_GroupName");
					this.Onsp_GroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_Name", DbType="VarChar(80)")]
		public string sp_Name
		{
			get
			{
				return this._sp_Name;
			}
			set
			{
				if ((this._sp_Name != value))
				{
					this.Onsp_NameChanging(value);
					this.SendPropertyChanging();
					this._sp_Name = value;
					this.SendPropertyChanged("sp_Name");
					this.Onsp_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_Password", DbType="VarChar(70)")]
		public string sp_Password
		{
			get
			{
				return this._sp_Password;
			}
			set
			{
				if ((this._sp_Password != value))
				{
					this.Onsp_PasswordChanging(value);
					this.SendPropertyChanging();
					this._sp_Password = value;
					this.SendPropertyChanged("sp_Password");
					this.Onsp_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_PriceListName", DbType="VarChar(100)")]
		public string sp_PriceListName
		{
			get
			{
				return this._sp_PriceListName;
			}
			set
			{
				if ((this._sp_PriceListName != value))
				{
					this.Onsp_PriceListNameChanging(value);
					this.SendPropertyChanging();
					this._sp_PriceListName = value;
					this.SendPropertyChanged("sp_PriceListName");
					this.Onsp_PriceListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueName", DbType="VarChar(100)")]
		public string VenueName
		{
			get
			{
				return this._VenueName;
			}
			set
			{
				if ((this._VenueName != value))
				{
					this.OnVenueNameChanging(value);
					this.SendPropertyChanging();
					this._VenueName = value;
					this.SendPropertyChanged("VenueName");
					this.OnVenueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LabCost
		{
			get
			{
				return this._LabCost;
			}
			set
			{
				if ((this._LabCost != value))
				{
					this.OnLabCostChanging(value);
					this.SendPropertyChanging();
					this._LabCost = value;
					this.SendPropertyChanged("LabCost");
					this.OnLabCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_ProductType", DbType="VarChar(50)")]
		public string sp_ProductType
		{
			get
			{
				return this._sp_ProductType;
			}
			set
			{
				if ((this._sp_ProductType != value))
				{
					this.Onsp_ProductTypeChanging(value);
					this.SendPropertyChanging();
					this._sp_ProductType = value;
					this.SendPropertyChanged("sp_ProductType");
					this.Onsp_ProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_JobNumber", DbType="VarChar(50)")]
		public string sp_JobNumber
		{
			get
			{
				return this._sp_JobNumber;
			}
			set
			{
				if ((this._sp_JobNumber != value))
				{
					this.Onsp_JobNumberChanging(value);
					this.SendPropertyChanging();
					this._sp_JobNumber = value;
					this.SendPropertyChanged("sp_JobNumber");
					this.Onsp_JobNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crop_coordinates", DbType="VarChar(20)")]
		public string crop_coordinates
		{
			get
			{
				return this._crop_coordinates;
			}
			set
			{
				if ((this._crop_coordinates != value))
				{
					this.Oncrop_coordinatesChanging(value);
					this.SendPropertyChanging();
					this._crop_coordinates = value;
					this.SendPropertyChanged("crop_coordinates");
					this.Oncrop_coordinatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crop_dimensions", DbType="VarChar(20)")]
		public string crop_dimensions
		{
			get
			{
				return this._crop_dimensions;
			}
			set
			{
				if ((this._crop_dimensions != value))
				{
					this.Oncrop_dimensionsChanging(value);
					this.SendPropertyChanging();
					this._crop_dimensions = value;
					this.SendPropertyChanged("crop_dimensions");
					this.Oncrop_dimensionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crop_orientation", DbType="VarChar(10)")]
		public string crop_orientation
		{
			get
			{
				return this._crop_orientation;
			}
			set
			{
				if ((this._crop_orientation != value))
				{
					this.Oncrop_orientationChanging(value);
					this.SendPropertyChanging();
					this._crop_orientation = value;
					this.SendPropertyChanged("crop_orientation");
					this.Oncrop_orientationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_FileName", DbType="VarChar(100)")]
		public string gp_FileName
		{
			get
			{
				return this._gp_FileName;
			}
			set
			{
				if ((this._gp_FileName != value))
				{
					this.Ongp_FileNameChanging(value);
					this.SendPropertyChanging();
					this._gp_FileName = value;
					this.SendPropertyChanged("gp_FileName");
					this.Ongp_FileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gp_FileName2", DbType="VarChar(100)")]
		public string gp_FileName2
		{
			get
			{
				return this._gp_FileName2;
			}
			set
			{
				if ((this._gp_FileName2 != value))
				{
					this.Ongp_FileName2Changing(value);
					this.SendPropertyChanging();
					this._gp_FileName2 = value;
					this.SendPropertyChanged("gp_FileName2");
					this.Ongp_FileName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_StudentPhotoOrder", Storage="_Order", ThisKey="OrderId", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.StudentPhotoOrders.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.StudentPhotoOrders.Add(this);
						this._OrderId = value.Id;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_StudentPhotoOrder", Storage="_School", ThisKey="SchoolId", OtherKey="ID", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.StudentPhotoOrders.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.StudentPhotoOrders.Add(this);
						this._SchoolId = value.ID;
					}
					else
					{
						this._SchoolId = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentImage_StudentPhotoOrder", Storage="_StudentImage", ThisKey="StudentImageId", OtherKey="ID", IsForeignKey=true)]
		public StudentImage StudentImage
		{
			get
			{
				return this._StudentImage.Entity;
			}
			set
			{
				StudentImage previousValue = this._StudentImage.Entity;
				if (((previousValue != value) 
							|| (this._StudentImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentImage.Entity = null;
						previousValue.StudentPhotoOrders.Remove(this);
					}
					this._StudentImage.Entity = value;
					if ((value != null))
					{
						value.StudentPhotoOrders.Add(this);
						this._StudentImageId = value.ID;
					}
					else
					{
						this._StudentImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
